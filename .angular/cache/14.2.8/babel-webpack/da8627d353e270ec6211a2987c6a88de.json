{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * This is an mock implementation of the Driver Provider.\n * It returns a fake webdriver and never actually contacts a selenium\n * server.\n */\n\nconst q = require(\"q\");\n\nconst selenium_webdriver_1 = require(\"selenium-webdriver\");\n\nconst driverProvider_1 = require(\"./driverProvider\");\n\nclass MockExecutor {\n  execute(command) {}\n\n}\n\nexports.MockExecutor = MockExecutor;\n\nclass Mock extends driverProvider_1.DriverProvider {\n  constructor(config) {\n    super(config);\n  }\n  /**\n   * An execute function that returns a promise with a test value.\n   */\n\n\n  execute() {\n    let deferred = q.defer();\n    deferred.resolve({\n      value: 'test_response'\n    });\n    return deferred.promise;\n  }\n  /**\n   * Configure and launch (if applicable) the object's environment.\n   * @public\n   * @return {q.promise} A promise which will resolve immediately.\n   */\n\n\n  setupDriverEnv() {\n    return q.fcall(function () {});\n  }\n  /**\n   * Create a new driver.\n   *\n   * @public\n   * @override\n   * @return webdriver instance\n   */\n\n\n  getNewDriver() {\n    let mockSession = new selenium_webdriver_1.Session('test_session_id', {});\n    let newDriver = new selenium_webdriver_1.WebDriver(mockSession, new MockExecutor());\n    this.drivers_.push(newDriver);\n    return newDriver;\n  }\n\n}\n\nexports.Mock = Mock;","map":{"version":3,"names":["Object","defineProperty","exports","value","q","require","selenium_webdriver_1","driverProvider_1","MockExecutor","execute","command","Mock","DriverProvider","constructor","config","deferred","defer","resolve","promise","setupDriverEnv","fcall","getNewDriver","mockSession","Session","newDriver","WebDriver","drivers_","push"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/protractor/built/driverProviders/mock.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * This is an mock implementation of the Driver Provider.\n * It returns a fake webdriver and never actually contacts a selenium\n * server.\n */\nconst q = require(\"q\");\nconst selenium_webdriver_1 = require(\"selenium-webdriver\");\nconst driverProvider_1 = require(\"./driverProvider\");\nclass MockExecutor {\n    execute(command) { }\n}\nexports.MockExecutor = MockExecutor;\nclass Mock extends driverProvider_1.DriverProvider {\n    constructor(config) {\n        super(config);\n    }\n    /**\n     * An execute function that returns a promise with a test value.\n     */\n    execute() {\n        let deferred = q.defer();\n        deferred.resolve({ value: 'test_response' });\n        return deferred.promise;\n    }\n    /**\n     * Configure and launch (if applicable) the object's environment.\n     * @public\n     * @return {q.promise} A promise which will resolve immediately.\n     */\n    setupDriverEnv() {\n        return q.fcall(function () { });\n    }\n    /**\n     * Create a new driver.\n     *\n     * @public\n     * @override\n     * @return webdriver instance\n     */\n    getNewDriver() {\n        let mockSession = new selenium_webdriver_1.Session('test_session_id', {});\n        let newDriver = new selenium_webdriver_1.WebDriver(mockSession, new MockExecutor());\n        this.drivers_.push(newDriver);\n        return newDriver;\n    }\n}\nexports.Mock = Mock;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAjB;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,oBAAD,CAApC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,kBAAD,CAAhC;;AACA,MAAMG,YAAN,CAAmB;EACfC,OAAO,CAACC,OAAD,EAAU,CAAG;;AADL;;AAGnBR,OAAO,CAACM,YAAR,GAAuBA,YAAvB;;AACA,MAAMG,IAAN,SAAmBJ,gBAAgB,CAACK,cAApC,CAAmD;EAC/CC,WAAW,CAACC,MAAD,EAAS;IAChB,MAAMA,MAAN;EACH;EACD;AACJ;AACA;;;EACIL,OAAO,GAAG;IACN,IAAIM,QAAQ,GAAGX,CAAC,CAACY,KAAF,EAAf;IACAD,QAAQ,CAACE,OAAT,CAAiB;MAAEd,KAAK,EAAE;IAAT,CAAjB;IACA,OAAOY,QAAQ,CAACG,OAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,cAAc,GAAG;IACb,OAAOf,CAAC,CAACgB,KAAF,CAAQ,YAAY,CAAG,CAAvB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIC,YAAY,GAAG;IACX,IAAIC,WAAW,GAAG,IAAIhB,oBAAoB,CAACiB,OAAzB,CAAiC,iBAAjC,EAAoD,EAApD,CAAlB;IACA,IAAIC,SAAS,GAAG,IAAIlB,oBAAoB,CAACmB,SAAzB,CAAmCH,WAAnC,EAAgD,IAAId,YAAJ,EAAhD,CAAhB;IACA,KAAKkB,QAAL,CAAcC,IAAd,CAAmBH,SAAnB;IACA,OAAOA,SAAP;EACH;;AAhC8C;;AAkCnDtB,OAAO,CAACS,IAAR,GAAeA,IAAf"},"metadata":{},"sourceType":"script"}