{"ast":null,"code":"var util = require(\"util\");\n\nvar BaseClient = require(\"./client\");\n\nvar extend = require(\"./extend\");\n\nfunction ScreenshotClient(settings) {\n  this.server = {\n    host: \"www.browserstack.com\"\n  };\n  BaseClient.call(this, settings);\n}\n\nutil.inherits(ScreenshotClient, BaseClient); // public API\n\nextend(ScreenshotClient.prototype, {\n  getBrowsers: function (fn) {\n    this.request({\n      path: this.path(\"/browsers.json\")\n    }, fn);\n  },\n  generateScreenshots: function (options, fn) {\n    var data = JSON.stringify(options);\n    this.request({\n      method: \"POST\",\n      path: this.path(\"\")\n    }, data, fn);\n  },\n  getJob: function (id, fn) {\n    this.request({\n      path: this.path(\"/\" + id + \".json\")\n    }, fn);\n  }\n}); // internal API\n\nextend(ScreenshotClient.prototype, {\n  path: function (path) {\n    return \"/screenshots\" + path;\n  }\n});\nmodule.exports = {\n  createClient: function (settings) {\n    return new ScreenshotClient(settings);\n  }\n};","map":{"version":3,"names":["util","require","BaseClient","extend","ScreenshotClient","settings","server","host","call","inherits","prototype","getBrowsers","fn","request","path","generateScreenshots","options","data","JSON","stringify","method","getJob","id","module","exports","createClient"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/browserstack/lib/screenshot.js"],"sourcesContent":["var util = require(\"util\");\nvar BaseClient = require(\"./client\");\nvar extend = require(\"./extend\");\n\nfunction ScreenshotClient(settings) {\n\tthis.server = {\n\t\thost: \"www.browserstack.com\"\n\t};\n\tBaseClient.call(this, settings);\n}\n\nutil.inherits(ScreenshotClient, BaseClient);\n\n// public API\nextend(ScreenshotClient.prototype, {\n\tgetBrowsers: function(fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/browsers.json\")\n\t\t}, fn);\n\t},\n\n\tgenerateScreenshots: function(options, fn) {\n\t\tvar data = JSON.stringify(options);\n\t\tthis.request({\n\t\t\tmethod: \"POST\",\n\t\t\tpath: this.path(\"\")\n\t\t}, data, fn);\n\t},\n\n\tgetJob: function(id, fn) {\n\t\tthis.request({\n\t\t\tpath: this.path(\"/\" + id + \".json\")\n\t\t}, fn);\n\t}\n});\n\n// internal API\nextend(ScreenshotClient.prototype, {\n\tpath: function(path) {\n\t\treturn \"/screenshots\" + path;\n\t}\n});\n\nmodule.exports = {\n\tcreateClient: function(settings) {\n\t\treturn new ScreenshotClient(settings);\n\t}\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASG,gBAAT,CAA0BC,QAA1B,EAAoC;EACnC,KAAKC,MAAL,GAAc;IACbC,IAAI,EAAE;EADO,CAAd;EAGAL,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsBH,QAAtB;AACA;;AAEDL,IAAI,CAACS,QAAL,CAAcL,gBAAd,EAAgCF,UAAhC,E,CAEA;;AACAC,MAAM,CAACC,gBAAgB,CAACM,SAAlB,EAA6B;EAClCC,WAAW,EAAE,UAASC,EAAT,EAAa;IACzB,KAAKC,OAAL,CAAa;MACZC,IAAI,EAAE,KAAKA,IAAL,CAAU,gBAAV;IADM,CAAb,EAEGF,EAFH;EAGA,CALiC;EAOlCG,mBAAmB,EAAE,UAASC,OAAT,EAAkBJ,EAAlB,EAAsB;IAC1C,IAAIK,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAX;IACA,KAAKH,OAAL,CAAa;MACZO,MAAM,EAAE,MADI;MAEZN,IAAI,EAAE,KAAKA,IAAL,CAAU,EAAV;IAFM,CAAb,EAGGG,IAHH,EAGSL,EAHT;EAIA,CAbiC;EAelCS,MAAM,EAAE,UAASC,EAAT,EAAaV,EAAb,EAAiB;IACxB,KAAKC,OAAL,CAAa;MACZC,IAAI,EAAE,KAAKA,IAAL,CAAU,MAAMQ,EAAN,GAAW,OAArB;IADM,CAAb,EAEGV,EAFH;EAGA;AAnBiC,CAA7B,CAAN,C,CAsBA;;AACAT,MAAM,CAACC,gBAAgB,CAACM,SAAlB,EAA6B;EAClCI,IAAI,EAAE,UAASA,IAAT,EAAe;IACpB,OAAO,iBAAiBA,IAAxB;EACA;AAHiC,CAA7B,CAAN;AAMAS,MAAM,CAACC,OAAP,GAAiB;EAChBC,YAAY,EAAE,UAASpB,QAAT,EAAmB;IAChC,OAAO,IAAID,gBAAJ,CAAqBC,QAArB,CAAP;EACA;AAHe,CAAjB"},"metadata":{},"sourceType":"script"}