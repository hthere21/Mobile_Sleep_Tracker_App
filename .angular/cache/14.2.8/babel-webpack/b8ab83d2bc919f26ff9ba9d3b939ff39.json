{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n'use strict';\n\nconst {\n  Capabilities\n} = require('./capabilities');\n/**\n * Contains information about a single WebDriver session.\n */\n\n\nclass Session {\n  /**\n   * @param {string} id The session ID.\n   * @param {!(Object|Capabilities)} capabilities The session\n   *     capabilities.\n   */\n  constructor(id, capabilities) {\n    /** @private {string} */\n    this.id_ = id;\n    /** @private {!Capabilities} */\n\n    this.caps_ = capabilities instanceof Capabilities ?\n    /** @type {!Capabilities} */\n    capabilities : new Capabilities(capabilities);\n  }\n  /**\n   * @return {string} This session's ID.\n   */\n\n\n  getId() {\n    return this.id_;\n  }\n  /**\n   * @return {!Capabilities} This session's capabilities.\n   */\n\n\n  getCapabilities() {\n    return this.caps_;\n  }\n  /**\n   * Retrieves the value of a specific capability.\n   * @param {string} key The capability to retrieve.\n   * @return {*} The capability value.\n   */\n\n\n  getCapability(key) {\n    return this.caps_.get(key);\n  }\n  /**\n   * Returns the JSON representation of this object, which is just the string\n   * session ID.\n   * @return {string} The JSON representation of this Session.\n   */\n\n\n  toJSON() {\n    return this.getId();\n  }\n\n} // PUBLIC API\n\n\nmodule.exports = {\n  Session: Session\n};","map":{"version":3,"names":["Capabilities","require","Session","constructor","id","capabilities","id_","caps_","getId","getCapabilities","getCapability","key","get","toJSON","module","exports"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/selenium-webdriver/lib/session.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst {Capabilities} = require('./capabilities');\n\n\n/**\n * Contains information about a single WebDriver session.\n */\nclass Session {\n\n  /**\n   * @param {string} id The session ID.\n   * @param {!(Object|Capabilities)} capabilities The session\n   *     capabilities.\n   */\n  constructor(id, capabilities) {\n    /** @private {string} */\n    this.id_ = id;\n\n    /** @private {!Capabilities} */\n    this.caps_ = capabilities instanceof Capabilities\n        ? /** @type {!Capabilities} */(capabilities)\n        : new Capabilities(capabilities);\n  }\n\n  /**\n   * @return {string} This session's ID.\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {!Capabilities} This session's capabilities.\n   */\n  getCapabilities() {\n    return this.caps_;\n  }\n\n  /**\n   * Retrieves the value of a specific capability.\n   * @param {string} key The capability to retrieve.\n   * @return {*} The capability value.\n   */\n  getCapability(key) {\n    return this.caps_.get(key);\n  }\n\n  /**\n   * Returns the JSON representation of this object, which is just the string\n   * session ID.\n   * @return {string} The JSON representation of this Session.\n   */\n  toJSON() {\n    return this.getId();\n  }\n}\n\n\n// PUBLIC API\n\n\nmodule.exports = {Session: Session};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;EAACA;AAAD,IAAiBC,OAAO,CAAC,gBAAD,CAA9B;AAGA;AACA;AACA;;;AACA,MAAMC,OAAN,CAAc;EAEZ;AACF;AACA;AACA;AACA;EACEC,WAAW,CAACC,EAAD,EAAKC,YAAL,EAAmB;IAC5B;IACA,KAAKC,GAAL,GAAWF,EAAX;IAEA;;IACA,KAAKG,KAAL,GAAaF,YAAY,YAAYL,YAAxB;IACP;IAA6BK,YADtB,GAEP,IAAIL,YAAJ,CAAiBK,YAAjB,CAFN;EAGD;EAED;AACF;AACA;;;EACEG,KAAK,GAAG;IACN,OAAO,KAAKF,GAAZ;EACD;EAED;AACF;AACA;;;EACEG,eAAe,GAAG;IAChB,OAAO,KAAKF,KAAZ;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEG,aAAa,CAACC,GAAD,EAAM;IACjB,OAAO,KAAKJ,KAAL,CAAWK,GAAX,CAAeD,GAAf,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEE,MAAM,GAAG;IACP,OAAO,KAAKL,KAAL,EAAP;EACD;;AA/CW,C,CAmDd;;;AAGAM,MAAM,CAACC,OAAP,GAAiB;EAACb,OAAO,EAAEA;AAAV,CAAjB"},"metadata":{},"sourceType":"script"}