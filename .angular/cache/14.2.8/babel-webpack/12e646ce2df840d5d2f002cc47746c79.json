{"ast":null,"code":"\"use strict\";\n/* global self, window, module, global, require */\n\nmodule.exports = function () {\n  \"use strict\";\n\n  var globalObject = void 0;\n\n  function isFunction(x) {\n    return typeof x === \"function\";\n  } // Seek the global object\n\n\n  if (global !== undefined) {\n    globalObject = global;\n  } else if (window !== undefined && window.document) {\n    globalObject = window;\n  } else {\n    globalObject = self;\n  } // Test for any native promise implementation, and if that\n  // implementation appears to conform to the specificaton.\n  // This code mostly nicked from the es6-promise module polyfill\n  // and then fooled with.\n\n\n  var hasPromiseSupport = function () {\n    // No promise object at all, and it's a non-starter\n    if (!globalObject.hasOwnProperty(\"Promise\")) {\n      return false;\n    } // There is a Promise object. Does it conform to the spec?\n\n\n    var P = globalObject.Promise; // Some of these methods are missing from\n    // Firefox/Chrome experimental implementations\n\n    if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n      return false;\n    }\n\n    if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n      return false;\n    } // Older version of the spec had a resolver object\n    // as the arg rather than a function\n\n\n    return function () {\n      var resolve = void 0;\n      var p = new globalObject.Promise(function (r) {\n        resolve = r;\n      });\n\n      if (p) {\n        return isFunction(resolve);\n      }\n\n      return false;\n    }();\n  }(); // Export the native Promise implementation if it\n  // looks like it matches the spec\n\n\n  if (hasPromiseSupport) {\n    return globalObject.Promise;\n  } //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n\n\n  return require(\"es6-promise\").Promise;\n}();","map":{"version":3,"names":["module","exports","globalObject","isFunction","x","global","undefined","window","document","self","hasPromiseSupport","hasOwnProperty","P","Promise","resolve","p","r","require"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/es6-promisify/dist/promise.js"],"sourcesContent":["\"use strict\";\n\n/* global self, window, module, global, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    var globalObject = void 0;\n\n    function isFunction(x) {\n        return typeof x === \"function\";\n    }\n\n    // Seek the global object\n    if (global !== undefined) {\n        globalObject = global;\n    } else if (window !== undefined && window.document) {\n        globalObject = window;\n    } else {\n        globalObject = self;\n    }\n\n    // Test for any native promise implementation, and if that\n    // implementation appears to conform to the specificaton.\n    // This code mostly nicked from the es6-promise module polyfill\n    // and then fooled with.\n    var hasPromiseSupport = function () {\n\n        // No promise object at all, and it's a non-starter\n        if (!globalObject.hasOwnProperty(\"Promise\")) {\n            return false;\n        }\n\n        // There is a Promise object. Does it conform to the spec?\n        var P = globalObject.Promise;\n\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n            return false;\n        }\n\n        if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n            return false;\n        }\n\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        return function () {\n\n            var resolve = void 0;\n\n            var p = new globalObject.Promise(function (r) {\n                resolve = r;\n            });\n\n            if (p) {\n                return isFunction(resolve);\n            }\n\n            return false;\n        }();\n    }();\n\n    // Export the native Promise implementation if it\n    // looks like it matches the spec\n    if (hasPromiseSupport) {\n        return globalObject.Promise;\n    }\n\n    //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n    return require(\"es6-promise\").Promise;\n}();"],"mappings":"AAAA;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB,YAAY;EAEzB;;EAEA,IAAIC,YAAY,GAAG,KAAK,CAAxB;;EAEA,SAASC,UAAT,CAAoBC,CAApB,EAAuB;IACnB,OAAO,OAAOA,CAAP,KAAa,UAApB;EACH,CARwB,CAUzB;;;EACA,IAAIC,MAAM,KAAKC,SAAf,EAA0B;IACtBJ,YAAY,GAAGG,MAAf;EACH,CAFD,MAEO,IAAIE,MAAM,KAAKD,SAAX,IAAwBC,MAAM,CAACC,QAAnC,EAA6C;IAChDN,YAAY,GAAGK,MAAf;EACH,CAFM,MAEA;IACHL,YAAY,GAAGO,IAAf;EACH,CAjBwB,CAmBzB;EACA;EACA;EACA;;;EACA,IAAIC,iBAAiB,GAAG,YAAY;IAEhC;IACA,IAAI,CAACR,YAAY,CAACS,cAAb,CAA4B,SAA5B,CAAL,EAA6C;MACzC,OAAO,KAAP;IACH,CAL+B,CAOhC;;;IACA,IAAIC,CAAC,GAAGV,YAAY,CAACW,OAArB,CARgC,CAUhC;IACA;;IACA,IAAI,CAACD,CAAC,CAACD,cAAF,CAAiB,SAAjB,CAAD,IAAgC,CAACC,CAAC,CAACD,cAAF,CAAiB,QAAjB,CAArC,EAAiE;MAC7D,OAAO,KAAP;IACH;;IAED,IAAI,CAACC,CAAC,CAACD,cAAF,CAAiB,KAAjB,CAAD,IAA4B,CAACC,CAAC,CAACD,cAAF,CAAiB,MAAjB,CAAjC,EAA2D;MACvD,OAAO,KAAP;IACH,CAlB+B,CAoBhC;IACA;;;IACA,OAAO,YAAY;MAEf,IAAIG,OAAO,GAAG,KAAK,CAAnB;MAEA,IAAIC,CAAC,GAAG,IAAIb,YAAY,CAACW,OAAjB,CAAyB,UAAUG,CAAV,EAAa;QAC1CF,OAAO,GAAGE,CAAV;MACH,CAFO,CAAR;;MAIA,IAAID,CAAJ,EAAO;QACH,OAAOZ,UAAU,CAACW,OAAD,CAAjB;MACH;;MAED,OAAO,KAAP;IACH,CAbM,EAAP;EAcH,CApCuB,EAAxB,CAvByB,CA6DzB;EACA;;;EACA,IAAIJ,iBAAJ,EAAuB;IACnB,OAAOR,YAAY,CAACW,OAApB;EACH,CAjEwB,CAmEzB;;;EACA,OAAOI,OAAO,CAAC,aAAD,CAAP,CAAuBJ,OAA9B;AACH,CArEgB,EAAjB"},"metadata":{},"sourceType":"script"}