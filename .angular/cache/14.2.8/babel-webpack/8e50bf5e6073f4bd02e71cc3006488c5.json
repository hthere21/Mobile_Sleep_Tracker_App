{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n *  This is an implementation of the Hosted Driver Provider.\n *  It is responsible for setting up the account object, tearing\n *  it down, and setting up the driver correctly.\n */\n\nconst q = require(\"q\");\n\nconst logger_1 = require(\"../logger\");\n\nconst driverProvider_1 = require(\"./driverProvider\");\n\nlet logger = new logger_1.Logger('hosted');\n\nclass Hosted extends driverProvider_1.DriverProvider {\n  constructor(config) {\n    super(config);\n  }\n  /**\n   * Configure and launch (if applicable) the object's environment.\n   * @public\n   * @return {q.promise} A promise which will resolve when the environment is\n   *     ready to test.\n   */\n\n\n  setupDriverEnv() {\n    logger.info('Using the selenium server at ' + this.config_.seleniumAddress);\n    return q.fcall(function () {});\n  }\n\n}\n\nexports.Hosted = Hosted;","map":{"version":3,"names":["Object","defineProperty","exports","value","q","require","logger_1","driverProvider_1","logger","Logger","Hosted","DriverProvider","constructor","config","setupDriverEnv","info","config_","seleniumAddress","fcall"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/protractor/built/driverProviders/hosted.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n *  This is an implementation of the Hosted Driver Provider.\n *  It is responsible for setting up the account object, tearing\n *  it down, and setting up the driver correctly.\n */\nconst q = require(\"q\");\nconst logger_1 = require(\"../logger\");\nconst driverProvider_1 = require(\"./driverProvider\");\nlet logger = new logger_1.Logger('hosted');\nclass Hosted extends driverProvider_1.DriverProvider {\n    constructor(config) {\n        super(config);\n    }\n    /**\n     * Configure and launch (if applicable) the object's environment.\n     * @public\n     * @return {q.promise} A promise which will resolve when the environment is\n     *     ready to test.\n     */\n    setupDriverEnv() {\n        logger.info('Using the selenium server at ' + this.config_.seleniumAddress);\n        return q.fcall(function () { });\n    }\n}\nexports.Hosted = Hosted;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAjB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,kBAAD,CAAhC;;AACA,IAAIG,MAAM,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB,QAApB,CAAb;;AACA,MAAMC,MAAN,SAAqBH,gBAAgB,CAACI,cAAtC,CAAqD;EACjDC,WAAW,CAACC,MAAD,EAAS;IAChB,MAAMA,MAAN;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIC,cAAc,GAAG;IACbN,MAAM,CAACO,IAAP,CAAY,kCAAkC,KAAKC,OAAL,CAAaC,eAA3D;IACA,OAAOb,CAAC,CAACc,KAAF,CAAQ,YAAY,CAAG,CAAvB,CAAP;EACH;;AAbgD;;AAerDhB,OAAO,CAACQ,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}