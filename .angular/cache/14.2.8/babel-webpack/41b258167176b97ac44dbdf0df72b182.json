{"ast":null,"code":"#!/usr/bin/env node\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst minimist = require(\"minimist\");\n\nconst opts = {\n  boolean: ['help', 'fork'],\n  string: ['port', 'seleniumAddress', 'highlightDelay', 'logDir'],\n  alias: {\n    help: ['h'],\n    port: ['p'],\n    seleniumAddress: ['s']\n  },\n  default: {\n    port: process.env.BP_PORT || 0,\n    seleniumAddress: process.env.BP_SELENIUM_ADDRESS || 'http://localhost:4444/wd/hub'\n  }\n};\n\nfunction processArgs(argv) {\n  return minimist(argv, opts);\n}\n\nexports.processArgs = processArgs;\n\nfunction printHelp() {\n  console.log(`\nUsage: blocking-proxy <options>\n\nOptions:\n    --help, -h              Show help.\n    --port, -p              The port to listen on. If unset, will choose a random free port.\n    --fork                  Start in fork mode. BlockingProxy will use process.send() to communicate\n                                with the parent process.\n    --selenumAddress, -s    The address of the selenium remote server to proxy.\n    --highlightDelay        If specified, will highlight elements before interacting with them and \n                                wait the specified amount of time (in ms) before allowing WebDriver\n                                to continue.\n    --logDir                If specified, will create a log of WebDriver commands in this directory.\n    --rootElement           Element housing ng-app, if not html or body.\n`);\n}\n\nexports.printHelp = printHelp;","map":{"version":3,"names":["Object","defineProperty","exports","value","minimist","require","opts","boolean","string","alias","help","port","seleniumAddress","default","process","env","BP_PORT","BP_SELENIUM_ADDRESS","processArgs","argv","printHelp","console","log"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/blocking-proxy/built/lib/config.js"],"sourcesContent":["#!/usr/bin/env node\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst minimist = require(\"minimist\");\nconst opts = {\n    boolean: ['help', 'fork'],\n    string: ['port', 'seleniumAddress', 'highlightDelay', 'logDir'],\n    alias: {\n        help: ['h'],\n        port: ['p'],\n        seleniumAddress: ['s'],\n    },\n    default: {\n        port: process.env.BP_PORT || 0,\n        seleniumAddress: process.env.BP_SELENIUM_ADDRESS || 'http://localhost:4444/wd/hub',\n    }\n};\nfunction processArgs(argv) {\n    return minimist(argv, opts);\n}\nexports.processArgs = processArgs;\nfunction printHelp() {\n    console.log(`\nUsage: blocking-proxy <options>\n\nOptions:\n    --help, -h              Show help.\n    --port, -p              The port to listen on. If unset, will choose a random free port.\n    --fork                  Start in fork mode. BlockingProxy will use process.send() to communicate\n                                with the parent process.\n    --selenumAddress, -s    The address of the selenium remote server to proxy.\n    --highlightDelay        If specified, will highlight elements before interacting with them and \n                                wait the specified amount of time (in ms) before allowing WebDriver\n                                to continue.\n    --logDir                If specified, will create a log of WebDriver commands in this directory.\n    --rootElement           Element housing ng-app, if not html or body.\n`);\n}\nexports.printHelp = printHelp;\n"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,IAAI,GAAG;EACTC,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT,CADA;EAETC,MAAM,EAAE,CAAC,MAAD,EAAS,iBAAT,EAA4B,gBAA5B,EAA8C,QAA9C,CAFC;EAGTC,KAAK,EAAE;IACHC,IAAI,EAAE,CAAC,GAAD,CADH;IAEHC,IAAI,EAAE,CAAC,GAAD,CAFH;IAGHC,eAAe,EAAE,CAAC,GAAD;EAHd,CAHE;EAQTC,OAAO,EAAE;IACLF,IAAI,EAAEG,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,CADxB;IAELJ,eAAe,EAAEE,OAAO,CAACC,GAAR,CAAYE,mBAAZ,IAAmC;EAF/C;AARA,CAAb;;AAaA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACvB,OAAOf,QAAQ,CAACe,IAAD,EAAOb,IAAP,CAAf;AACH;;AACDJ,OAAO,CAACgB,WAAR,GAAsBA,WAAtB;;AACA,SAASE,SAAT,GAAqB;EACjBC,OAAO,CAACC,GAAR,CAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdI;AAeH;;AACDpB,OAAO,CAACkB,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}