{"ast":null,"code":"#!/usr/bin/env node\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst blockingproxy_1 = require(\"./blockingproxy\");\n\nconst config_1 = require(\"./config\");\n/**\n * Starts up a proxy server which modifies calls between the test process\n * and the selenium server.\n */\n\n\nconst argv = config_1.processArgs(process.argv.slice(2));\n\nif (argv.help) {\n  config_1.printHelp();\n  process.exit(0);\n}\n\nconst proxy = new blockingproxy_1.BlockingProxy(argv.seleniumAddress, parseInt(argv.highlightDelay));\n\nif (argv.logDir) {\n  proxy.enableLogging(argv.logDir);\n}\n\nlet port = proxy.listen(argv.port);\nconsole.log(`Listening on :${port}`);\n\nif (argv.fork) {\n  process.send({\n    ready: true,\n    port: port\n  });\n  process.on('disconnect', function () {\n    console.log('parent exited, quitting');\n    process.exit();\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","blockingproxy_1","require","config_1","argv","processArgs","process","slice","help","printHelp","exit","proxy","BlockingProxy","seleniumAddress","parseInt","highlightDelay","logDir","enableLogging","port","listen","console","log","fork","send","ready","on"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/blocking-proxy/built/lib/bin.js"],"sourcesContent":["#!/usr/bin/env node\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst blockingproxy_1 = require(\"./blockingproxy\");\nconst config_1 = require(\"./config\");\n/**\n * Starts up a proxy server which modifies calls between the test process\n * and the selenium server.\n */\nconst argv = config_1.processArgs(process.argv.slice(2));\nif (argv.help) {\n    config_1.printHelp();\n    process.exit(0);\n}\nconst proxy = new blockingproxy_1.BlockingProxy(argv.seleniumAddress, parseInt(argv.highlightDelay));\nif (argv.logDir) {\n    proxy.enableLogging(argv.logDir);\n}\nlet port = proxy.listen(argv.port);\nconsole.log(`Listening on :${port}`);\nif (argv.fork) {\n    process.send({ ready: true, port: port });\n    process.on('disconnect', function () {\n        console.log('parent exited, quitting');\n        process.exit();\n    });\n}\n"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAA/B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;AACA;AACA;AACA;AACA;;;AACA,MAAME,IAAI,GAAGD,QAAQ,CAACE,WAAT,CAAqBC,OAAO,CAACF,IAAR,CAAaG,KAAb,CAAmB,CAAnB,CAArB,CAAb;;AACA,IAAIH,IAAI,CAACI,IAAT,EAAe;EACXL,QAAQ,CAACM,SAAT;EACAH,OAAO,CAACI,IAAR,CAAa,CAAb;AACH;;AACD,MAAMC,KAAK,GAAG,IAAIV,eAAe,CAACW,aAApB,CAAkCR,IAAI,CAACS,eAAvC,EAAwDC,QAAQ,CAACV,IAAI,CAACW,cAAN,CAAhE,CAAd;;AACA,IAAIX,IAAI,CAACY,MAAT,EAAiB;EACbL,KAAK,CAACM,aAAN,CAAoBb,IAAI,CAACY,MAAzB;AACH;;AACD,IAAIE,IAAI,GAAGP,KAAK,CAACQ,MAAN,CAAaf,IAAI,CAACc,IAAlB,CAAX;AACAE,OAAO,CAACC,GAAR,CAAa,iBAAgBH,IAAK,EAAlC;;AACA,IAAId,IAAI,CAACkB,IAAT,EAAe;EACXhB,OAAO,CAACiB,IAAR,CAAa;IAAEC,KAAK,EAAE,IAAT;IAAeN,IAAI,EAAEA;EAArB,CAAb;EACAZ,OAAO,CAACmB,EAAR,CAAW,YAAX,EAAyB,YAAY;IACjCL,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACAf,OAAO,CAACI,IAAR;EACH,CAHD;AAIH"},"metadata":{},"sourceType":"script"}