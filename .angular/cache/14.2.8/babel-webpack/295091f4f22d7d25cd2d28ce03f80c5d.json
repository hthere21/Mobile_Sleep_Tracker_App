{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst CONFIG_ERROR_CODE = 105;\nconst BROWSER_CONNECT_ERROR_CODE = 135;\nconst KITCHEN_SINK_CODE = 199;\n\nclass IError extends Error {}\n\nexports.IError = IError;\n\nclass ProtractorError extends IError {\n  constructor(logger, message, code, error) {\n    super(message);\n    this.message = message;\n    this.code = code; // replacing the stack trace with the thrown error stack trace.\n\n    if (error) {\n      let protractorError = error;\n      this.stack = protractorError.stack;\n    }\n\n    ProtractorError.log(logger, this.code, this.message, this.stack);\n\n    if (!ProtractorError.SUPRESS_EXIT_CODE) {\n      process.exit(this.code);\n    }\n  }\n\n  static log(logger, code, message, stack) {\n    let messages = message.split('\\n');\n\n    if (messages.length > 1) {\n      message = messages[0];\n    }\n\n    logger.error('Error code: ' + code);\n    logger.error('Error message: ' + message);\n    logger.error(stack);\n  }\n\n}\n\nProtractorError.CODE = KITCHEN_SINK_CODE;\nProtractorError.SUPRESS_EXIT_CODE = false;\nexports.ProtractorError = ProtractorError;\n/**\n * Configuration file error\n */\n\nclass ConfigError extends ProtractorError {\n  constructor(logger, message, error) {\n    super(logger, message, ConfigError.CODE, error);\n  }\n\n}\n\nConfigError.CODE = CONFIG_ERROR_CODE;\nexports.ConfigError = ConfigError;\n/**\n * Browser errors including getting a driver session, direct connect, etc.\n */\n\nclass BrowserError extends ProtractorError {\n  constructor(logger, message) {\n    super(logger, message, BrowserError.CODE);\n  }\n\n}\n\nBrowserError.CODE = BROWSER_CONNECT_ERROR_CODE;\nBrowserError.ERR_MSGS = ['ECONNREFUSED connect ECONNREFUSED', 'Sauce Labs Authentication Error', 'Invalid username or password'];\nexports.BrowserError = BrowserError;\n\nclass ErrorHandler {\n  static isError(errMsgs, e) {\n    if (errMsgs && errMsgs.length > 0) {\n      for (let errPos in errMsgs) {\n        let errMsg = errMsgs[errPos];\n\n        if (e.message && e.message.indexOf(errMsg) !== -1) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  static parseError(e) {\n    if (ErrorHandler.isError(ConfigError.ERR_MSGS, e)) {\n      return ConfigError.CODE;\n    }\n\n    if (ErrorHandler.isError(BrowserError.ERR_MSGS, e)) {\n      return BrowserError.CODE;\n    }\n\n    return null;\n  }\n\n}\n\nexports.ErrorHandler = ErrorHandler;","map":{"version":3,"names":["Object","defineProperty","exports","value","CONFIG_ERROR_CODE","BROWSER_CONNECT_ERROR_CODE","KITCHEN_SINK_CODE","IError","Error","ProtractorError","constructor","logger","message","code","error","protractorError","stack","log","SUPRESS_EXIT_CODE","process","exit","messages","split","length","CODE","ConfigError","BrowserError","ERR_MSGS","ErrorHandler","isError","errMsgs","e","errPos","errMsg","indexOf","parseError"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/protractor/built/exitCodes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CONFIG_ERROR_CODE = 105;\nconst BROWSER_CONNECT_ERROR_CODE = 135;\nconst KITCHEN_SINK_CODE = 199;\nclass IError extends Error {\n}\nexports.IError = IError;\nclass ProtractorError extends IError {\n    constructor(logger, message, code, error) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        // replacing the stack trace with the thrown error stack trace.\n        if (error) {\n            let protractorError = error;\n            this.stack = protractorError.stack;\n        }\n        ProtractorError.log(logger, this.code, this.message, this.stack);\n        if (!ProtractorError.SUPRESS_EXIT_CODE) {\n            process.exit(this.code);\n        }\n    }\n    static log(logger, code, message, stack) {\n        let messages = message.split('\\n');\n        if (messages.length > 1) {\n            message = messages[0];\n        }\n        logger.error('Error code: ' + code);\n        logger.error('Error message: ' + message);\n        logger.error(stack);\n    }\n}\nProtractorError.CODE = KITCHEN_SINK_CODE;\nProtractorError.SUPRESS_EXIT_CODE = false;\nexports.ProtractorError = ProtractorError;\n/**\n * Configuration file error\n */\nclass ConfigError extends ProtractorError {\n    constructor(logger, message, error) {\n        super(logger, message, ConfigError.CODE, error);\n    }\n}\nConfigError.CODE = CONFIG_ERROR_CODE;\nexports.ConfigError = ConfigError;\n/**\n * Browser errors including getting a driver session, direct connect, etc.\n */\nclass BrowserError extends ProtractorError {\n    constructor(logger, message) {\n        super(logger, message, BrowserError.CODE);\n    }\n}\nBrowserError.CODE = BROWSER_CONNECT_ERROR_CODE;\nBrowserError.ERR_MSGS = [\n    'ECONNREFUSED connect ECONNREFUSED', 'Sauce Labs Authentication Error',\n    'Invalid username or password'\n];\nexports.BrowserError = BrowserError;\nclass ErrorHandler {\n    static isError(errMsgs, e) {\n        if (errMsgs && errMsgs.length > 0) {\n            for (let errPos in errMsgs) {\n                let errMsg = errMsgs[errPos];\n                if (e.message && e.message.indexOf(errMsg) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static parseError(e) {\n        if (ErrorHandler.isError(ConfigError.ERR_MSGS, e)) {\n            return ConfigError.CODE;\n        }\n        if (ErrorHandler.isError(BrowserError.ERR_MSGS, e)) {\n            return BrowserError.CODE;\n        }\n        return null;\n    }\n}\nexports.ErrorHandler = ErrorHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}