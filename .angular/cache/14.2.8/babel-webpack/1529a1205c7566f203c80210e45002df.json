{"ast":null,"code":"/**\n * All scripts to be run on the client via executeAsyncScript or\n * executeScript should be put here.\n *\n * NOTE: These scripts are transmitted over the wire as JavaScript text\n * constructed using their toString representation, and *cannot*\n * reference external variables.\n *\n * Some implementations seem to have issues with // comments, so use star-style\n * inside scripts.  (TODO: add issue number / example implementations\n * that caused the switch to avoid the // comments.)\n */\n// jshint browser: true\n// jshint shadow: true\n\n/* global angular */\nvar functions = {}; ///////////////////////////////////////////////////////\n////                                               ////\n////                    HELPERS                    ////\n////                                               ////\n///////////////////////////////////////////////////////\n\n/* Wraps a function up into a string with its helper functions so that it can\n * call those helper functions client side\n *\n * @param {function} fun The function to wrap up with its helpers\n * @param {...function} The helper functions.  Each function must be named\n *\n * @return {string} The string which, when executed, will invoke fun in such a\n *   way that it has access to its helper functions\n */\n\nfunction wrapWithHelpers(fun) {\n  var helpers = Array.prototype.slice.call(arguments, 1);\n\n  if (!helpers.length) {\n    return fun;\n  }\n\n  var FunClass = Function; // Get the linter to allow this eval\n\n  return new FunClass(helpers.join(';') + String.fromCharCode(59) + '  return (' + fun.toString() + ').apply(this, arguments);');\n}\n/* Tests if an ngRepeat matches a repeater\n *\n * @param {string} ngRepeat The ngRepeat to test\n * @param {string} repeater The repeater to test against\n * @param {boolean} exact If the ngRepeat expression needs to match the whole\n *   repeater (not counting any `track by ...` modifier) or if it just needs to\n *   match a substring\n * @return {boolean} If the ngRepeat matched the repeater\n */\n\n\nfunction repeaterMatch(ngRepeat, repeater, exact) {\n  if (exact) {\n    return ngRepeat.split(' track by ')[0].split(' as ')[0].split('|')[0].split('=')[0].trim() == repeater;\n  } else {\n    return ngRepeat.indexOf(repeater) != -1;\n  }\n}\n/* Tries to find $$testability and possibly $injector for an ng1 app\n *\n * By default, doesn't care about $injector if it finds $$testability.  However,\n * these priorities can be reversed.\n *\n * @param {string=} selector The selector for the element with the injector.  If\n *   falsy, tries a variety of methods to find an injector\n * @param {boolean=} injectorPlease Prioritize finding an injector\n * @return {$$testability?: Testability, $injector?: Injector} Returns whatever\n *   ng1 app hooks it finds\n */\n\n\nfunction getNg1Hooks(selector, injectorPlease) {\n  function tryEl(el) {\n    try {\n      if (!injectorPlease && angular.getTestability) {\n        var $$testability = angular.getTestability(el);\n\n        if ($$testability) {\n          return {\n            $$testability: $$testability\n          };\n        }\n      } else {\n        var $injector = angular.element(el).injector();\n\n        if ($injector) {\n          return {\n            $injector: $injector\n          };\n        }\n      }\n    } catch (err) {}\n  }\n\n  function trySelector(selector) {\n    var els = document.querySelectorAll(selector);\n\n    for (var i = 0; i < els.length; i++) {\n      var elHooks = tryEl(els[i]);\n\n      if (elHooks) {\n        return elHooks;\n      }\n    }\n  }\n\n  if (selector) {\n    return trySelector(selector);\n  } else if (window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__) {\n    var $injector = window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__;\n    var $$testability = null;\n\n    try {\n      $$testability = $injector.get('$$testability');\n    } catch (e) {}\n\n    return {\n      $injector: $injector,\n      $$testability: $$testability\n    };\n  } else {\n    return tryEl(document.body) || trySelector('[ng-app]') || trySelector('[ng\\\\:app]') || trySelector('[ng-controller]') || trySelector('[ng\\\\:controller]');\n  }\n} ///////////////////////////////////////////////////////\n////                                               ////\n////                    SCRIPTS                    ////\n////                                               ////\n///////////////////////////////////////////////////////\n\n/**\n * Wait until Angular has finished rendering and has\n * no outstanding $http calls before continuing. The specific Angular app\n * is determined by the rootSelector.\n *\n * Asynchronous.\n *\n * @param {string} rootSelector The selector housing an ng-app\n * @param {function(string)} callback callback. If a failure occurs, it will\n *     be passed as a parameter.\n */\n\n\nfunctions.waitForAngular = function (rootSelector, callback) {\n  try {\n    // Wait for both angular1 testability and angular2 testability.\n    var testCallback = callback; // Wait for angular1 testability first and run waitForAngular2 as a callback\n\n    var waitForAngular1 = function (callback) {\n      if (window.angular) {\n        var hooks = getNg1Hooks(rootSelector);\n\n        if (!hooks) {\n          callback(); // not an angular1 app\n        } else {\n          if (hooks.$$testability) {\n            hooks.$$testability.whenStable(callback);\n          } else if (hooks.$injector) {\n            hooks.$injector.get('$browser').notifyWhenNoOutstandingRequests(callback);\n          } else if (!rootSelector) {\n            throw new Error('Could not automatically find injector on page: \"' + window.location.toString() + '\".  Consider using config.rootEl');\n          } else {\n            throw new Error('root element (' + rootSelector + ') has no injector.' + ' this may mean it is not inside ng-app.');\n          }\n        }\n      } else {\n        callback();\n      } // not an angular1 app\n\n    }; // Wait for Angular2 testability and then run test callback\n\n\n    var waitForAngular2 = function () {\n      if (window.getAngularTestability) {\n        if (rootSelector) {\n          var testability = null;\n          var el = document.querySelector(rootSelector);\n\n          try {\n            testability = window.getAngularTestability(el);\n          } catch (e) {}\n\n          if (testability) {\n            testability.whenStable(testCallback);\n            return;\n          }\n        } // Didn't specify root element or testability could not be found\n        // by rootSelector. This may happen in a hybrid app, which could have\n        // more than one root.\n\n\n        var testabilities = window.getAllAngularTestabilities();\n        var count = testabilities.length; // No angular2 testability, this happens when\n        // going to a hybrid page and going back to a pure angular1 page\n\n        if (count === 0) {\n          testCallback();\n          return;\n        }\n\n        var decrement = function () {\n          count--;\n\n          if (count === 0) {\n            testCallback();\n          }\n        };\n\n        testabilities.forEach(function (testability) {\n          testability.whenStable(decrement);\n        });\n      } else {\n        testCallback();\n      } // not an angular2 app\n\n    };\n\n    if (!window.angular && !window.getAngularTestability) {\n      // no testability hook\n      throw new Error('both angularJS testability and angular testability are undefined.' + '  This could be either ' + 'because this is a non-angular page or because your test involves ' + 'client-side navigation, which can interfere with Protractor\\'s ' + 'bootstrapping.  See http://git.io/v4gXM for details');\n    } else {\n      waitForAngular1(waitForAngular2);\n    } // Wait for angular1 and angular2\n    // Testability hooks sequentially\n\n  } catch (err) {\n    callback(err.message);\n  }\n};\n/**\n * Find a list of elements in the page by their angular binding.\n *\n * @param {string} binding The binding, e.g. {{cat.name}}.\n * @param {boolean} exactMatch Whether the binding needs to be matched exactly\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The elements containing the binding.\n */\n\n\nfunctions.findBindings = function (binding, exactMatch, using, rootSelector) {\n  using = using || document;\n\n  if (angular.getTestability) {\n    return getNg1Hooks(rootSelector).$$testability.findBindings(using, binding, exactMatch);\n  }\n\n  var bindings = using.getElementsByClassName('ng-binding');\n  var matches = [];\n\n  for (var i = 0; i < bindings.length; ++i) {\n    var dataBinding = angular.element(bindings[i]).data('$binding');\n\n    if (dataBinding) {\n      var bindingName = dataBinding.exp || dataBinding[0].exp || dataBinding;\n\n      if (exactMatch) {\n        var matcher = new RegExp('({|\\\\s|^|\\\\|)' +\n        /* See http://stackoverflow.com/q/3561711 */\n        binding.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&') + '(}|\\\\s|$|\\\\|)');\n\n        if (matcher.test(bindingName)) {\n          matches.push(bindings[i]);\n        }\n      } else {\n        if (bindingName.indexOf(binding) != -1) {\n          matches.push(bindings[i]);\n        }\n      }\n    }\n  }\n\n  return matches;\n  /* Return the whole array for webdriver.findElements. */\n};\n/**\n * Find an array of elements matching a row within an ng-repeat.\n * Always returns an array of only one element for plain old ng-repeat.\n * Returns an array of all the elements in one segment for ng-repeat-start.\n *\n * @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n * @param {boolean} exact Whether the repeater needs to be matched exactly\n * @param {number} index The row index.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The row of the repeater, or an array of elements\n *     in the first row in the case of ng-repeat-start.\n */\n\n\nfunction findRepeaterRows(repeater, exact, index, using) {\n  using = using || document;\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n  var rows = [];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n  /* multiRows is an array of arrays, where each inner array contains\n     one row of elements. */\n\n\n  var multiRows = [];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n        var row = [];\n\n        while (elem.nodeType != 8 || !repeaterMatch(elem.nodeValue, repeater)) {\n          if (elem.nodeType == 1) {\n            row.push(elem);\n          }\n\n          elem = elem.nextSibling;\n        }\n\n        multiRows.push(row);\n      }\n    }\n  }\n\n  var row = rows[index] || [],\n      multiRow = multiRows[index] || [];\n  return [].concat(row, multiRow);\n}\n\nfunctions.findRepeaterRows = wrapWithHelpers(findRepeaterRows, repeaterMatch);\n/**\n* Find all rows of an ng-repeat.\n*\n* @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n* @param {boolean} exact Whether the repeater needs to be matched exactly\n* @param {Element} using The scope of the search.\n*\n* @return {Array.<Element>} All rows of the repeater.\n*/\n\nfunction findAllRepeaterRows(repeater, exact, using) {\n  using = using || document;\n  var rows = [];\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n\n        while (elem.nodeType != 8 || !repeaterMatch(elem.nodeValue, repeater)) {\n          if (elem.nodeType == 1) {\n            rows.push(elem);\n          }\n\n          elem = elem.nextSibling;\n        }\n      }\n    }\n  }\n\n  return rows;\n}\n\nfunctions.findAllRepeaterRows = wrapWithHelpers(findAllRepeaterRows, repeaterMatch);\n/**\n * Find an element within an ng-repeat by its row and column.\n *\n * @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n * @param {boolean} exact Whether the repeater needs to be matched exactly\n * @param {number} index The row index.\n * @param {string} binding The column binding, e.g. '{{cat.name}}'.\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The element in an array.\n */\n\nfunction findRepeaterElement(repeater, exact, index, binding, using, rootSelector) {\n  var matches = [];\n  using = using || document;\n  var rows = [];\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n  /* multiRows is an array of arrays, where each inner array contains\n     one row of elements. */\n\n\n  var multiRows = [];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n        var row = [];\n\n        while (elem.nodeType != 8 || elem.nodeValue && !repeaterMatch(elem.nodeValue, repeater)) {\n          if (elem.nodeType == 1) {\n            row.push(elem);\n          }\n\n          elem = elem.nextSibling;\n        }\n\n        multiRows.push(row);\n      }\n    }\n  }\n\n  var row = rows[index];\n  var multiRow = multiRows[index];\n  var bindings = [];\n\n  if (row) {\n    if (angular.getTestability) {\n      matches.push.apply(matches, getNg1Hooks(rootSelector).$$testability.findBindings(row, binding));\n    } else {\n      if (row.className.indexOf('ng-binding') != -1) {\n        bindings.push(row);\n      }\n\n      var childBindings = row.getElementsByClassName('ng-binding');\n\n      for (var i = 0; i < childBindings.length; ++i) {\n        bindings.push(childBindings[i]);\n      }\n    }\n  }\n\n  if (multiRow) {\n    for (var i = 0; i < multiRow.length; ++i) {\n      var rowElem = multiRow[i];\n\n      if (angular.getTestability) {\n        matches.push.apply(matches, getNg1Hooks(rootSelector).$$testability.findBindings(rowElem, binding));\n      } else {\n        if (rowElem.className.indexOf('ng-binding') != -1) {\n          bindings.push(rowElem);\n        }\n\n        var childBindings = rowElem.getElementsByClassName('ng-binding');\n\n        for (var j = 0; j < childBindings.length; ++j) {\n          bindings.push(childBindings[j]);\n        }\n      }\n    }\n  }\n\n  for (var i = 0; i < bindings.length; ++i) {\n    var dataBinding = angular.element(bindings[i]).data('$binding');\n\n    if (dataBinding) {\n      var bindingName = dataBinding.exp || dataBinding[0].exp || dataBinding;\n\n      if (bindingName.indexOf(binding) != -1) {\n        matches.push(bindings[i]);\n      }\n    }\n  }\n\n  return matches;\n}\n\nfunctions.findRepeaterElement = wrapWithHelpers(findRepeaterElement, repeaterMatch, getNg1Hooks);\n/**\n * Find the elements in a column of an ng-repeat.\n *\n * @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n * @param {boolean} exact Whether the repeater needs to be matched exactly\n * @param {string} binding The column binding, e.g. '{{cat.name}}'.\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The elements in the column.\n */\n\nfunction findRepeaterColumn(repeater, exact, binding, using, rootSelector) {\n  var matches = [];\n  using = using || document;\n  var rows = [];\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n  /* multiRows is an array of arrays, where each inner array contains\n     one row of elements. */\n\n\n  var multiRows = [];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n        var row = [];\n\n        while (elem.nodeType != 8 || elem.nodeValue && !repeaterMatch(elem.nodeValue, repeater)) {\n          if (elem.nodeType == 1) {\n            row.push(elem);\n          }\n\n          elem = elem.nextSibling;\n        }\n\n        multiRows.push(row);\n      }\n    }\n  }\n\n  var bindings = [];\n\n  for (var i = 0; i < rows.length; ++i) {\n    if (angular.getTestability) {\n      matches.push.apply(matches, getNg1Hooks(rootSelector).$$testability.findBindings(rows[i], binding));\n    } else {\n      if (rows[i].className.indexOf('ng-binding') != -1) {\n        bindings.push(rows[i]);\n      }\n\n      var childBindings = rows[i].getElementsByClassName('ng-binding');\n\n      for (var k = 0; k < childBindings.length; ++k) {\n        bindings.push(childBindings[k]);\n      }\n    }\n  }\n\n  for (var i = 0; i < multiRows.length; ++i) {\n    for (var j = 0; j < multiRows[i].length; ++j) {\n      if (angular.getTestability) {\n        matches.push.apply(matches, getNg1Hooks(rootSelector).$$testability.findBindings(multiRows[i][j], binding));\n      } else {\n        var elem = multiRows[i][j];\n\n        if (elem.className.indexOf('ng-binding') != -1) {\n          bindings.push(elem);\n        }\n\n        var childBindings = elem.getElementsByClassName('ng-binding');\n\n        for (var k = 0; k < childBindings.length; ++k) {\n          bindings.push(childBindings[k]);\n        }\n      }\n    }\n  }\n\n  for (var j = 0; j < bindings.length; ++j) {\n    var dataBinding = angular.element(bindings[j]).data('$binding');\n\n    if (dataBinding) {\n      var bindingName = dataBinding.exp || dataBinding[0].exp || dataBinding;\n\n      if (bindingName.indexOf(binding) != -1) {\n        matches.push(bindings[j]);\n      }\n    }\n  }\n\n  return matches;\n}\n\nfunctions.findRepeaterColumn = wrapWithHelpers(findRepeaterColumn, repeaterMatch, getNg1Hooks);\n/**\n * Find elements by model name.\n *\n * @param {string} model The model name.\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The matching elements.\n */\n\nfunctions.findByModel = function (model, using, rootSelector) {\n  using = using || document;\n\n  if (angular.getTestability) {\n    return getNg1Hooks(rootSelector).$$testability.findModels(using, model, true);\n  }\n\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var selector = '[' + prefixes[p] + 'model=\"' + model + '\"]';\n    var elements = using.querySelectorAll(selector);\n\n    if (elements.length) {\n      return elements;\n    }\n  }\n};\n/**\n * Find elements by options.\n *\n * @param {string} optionsDescriptor The descriptor for the option\n *     (i.e. fruit for fruit in fruits).\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The matching elements.\n */\n\n\nfunctions.findByOptions = function (optionsDescriptor, using) {\n  using = using || document;\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n\n  for (var p = 0; p < prefixes.length; ++p) {\n    var selector = '[' + prefixes[p] + 'options=\"' + optionsDescriptor + '\"] option';\n    var elements = using.querySelectorAll(selector);\n\n    if (elements.length) {\n      return elements;\n    }\n  }\n};\n/**\n * Find buttons by textual content.\n *\n * @param {string} searchText The exact text to match.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The matching elements.\n */\n\n\nfunctions.findByButtonText = function (searchText, using) {\n  using = using || document;\n  var elements = using.querySelectorAll('button, input[type=\"button\"], input[type=\"submit\"]');\n  var matches = [];\n\n  for (var i = 0; i < elements.length; ++i) {\n    var element = elements[i];\n    var elementText;\n\n    if (element.tagName.toLowerCase() == 'button') {\n      elementText = element.textContent || element.innerText || '';\n    } else {\n      elementText = element.value;\n    }\n\n    if (elementText.trim() === searchText) {\n      matches.push(element);\n    }\n  }\n\n  return matches;\n};\n/**\n * Find buttons by textual content.\n *\n * @param {string} searchText The exact text to match.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The matching elements.\n */\n\n\nfunctions.findByPartialButtonText = function (searchText, using) {\n  using = using || document;\n  var elements = using.querySelectorAll('button, input[type=\"button\"], input[type=\"submit\"]');\n  var matches = [];\n\n  for (var i = 0; i < elements.length; ++i) {\n    var element = elements[i];\n    var elementText;\n\n    if (element.tagName.toLowerCase() == 'button') {\n      elementText = element.textContent || element.innerText || '';\n    } else {\n      elementText = element.value;\n    }\n\n    if (elementText.indexOf(searchText) > -1) {\n      matches.push(element);\n    }\n  }\n\n  return matches;\n};\n/**\n * Find elements by css selector and textual content.\n *\n * @param {string} cssSelector The css selector to match.\n * @param {string} searchText The exact text to match or a serialized regex.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} An array of matching elements.\n */\n\n\nfunctions.findByCssContainingText = function (cssSelector, searchText, using) {\n  using = using || document;\n\n  if (searchText.indexOf('__REGEXP__') === 0) {\n    var match = searchText.split('__REGEXP__')[1].match(/\\/(.*)\\/(.*)?/);\n    searchText = new RegExp(match[1], match[2] || '');\n  }\n\n  var elements = using.querySelectorAll(cssSelector);\n  var matches = [];\n\n  for (var i = 0; i < elements.length; ++i) {\n    var element = elements[i];\n    var elementText = element.textContent || element.innerText || '';\n    var elementMatches = searchText instanceof RegExp ? searchText.test(elementText) : elementText.indexOf(searchText) > -1;\n\n    if (elementMatches) {\n      matches.push(element);\n    }\n  }\n\n  return matches;\n};\n/**\n * Tests whether the angular global variable is present on a page. Retries\n * in case the page is just loading slowly.\n *\n * Asynchronous.\n *\n * @param {number} attempts Number of times to retry.\n * @param {boolean} ng12Hybrid Flag set if app is a hybrid of angular 1 and 2\n * @param {function({version: ?number, message: ?string})} asyncCallback callback\n *\n */\n\n\nfunctions.testForAngular = function (attempts, ng12Hybrid, asyncCallback) {\n  var callback = function (args) {\n    setTimeout(function () {\n      asyncCallback(args);\n    }, 0);\n  };\n\n  var definitelyNg1 = !!ng12Hybrid;\n  var definitelyNg2OrNewer = false;\n\n  var check = function (n) {\n    try {\n      /* Figure out which version of angular we're waiting on */\n      if (!definitelyNg1 && !definitelyNg2OrNewer) {\n        if (window.angular && !(window.angular.version && window.angular.version.major > 1)) {\n          definitelyNg1 = true;\n        } else if (window.getAllAngularTestabilities) {\n          definitelyNg2OrNewer = true;\n        }\n      }\n      /* See if our version of angular is ready */\n\n\n      if (definitelyNg1) {\n        if (window.angular && window.angular.resumeBootstrap) {\n          return callback({\n            ver: 1\n          });\n        }\n      } else if (definitelyNg2OrNewer) {\n        if (true\n        /* ng2 has no resumeBootstrap() */\n        ) {\n          return callback({\n            ver: 2\n          });\n        }\n      }\n      /* Try again (or fail) */\n\n\n      if (n < 1) {\n        if (definitelyNg1 && window.angular) {\n          callback({\n            message: 'angular never provided resumeBootstrap'\n          });\n        } else if (ng12Hybrid && !window.angular) {\n          callback({\n            message: 'angular 1 never loaded' + window.getAllAngularTestabilities ? ' (are you sure this app ' + 'uses ngUpgrade?  Try un-setting ng12Hybrid)' : ''\n          });\n        } else {\n          callback({\n            message: 'retries looking for angular exceeded'\n          });\n        }\n      } else {\n        window.setTimeout(function () {\n          check(n - 1);\n        }, 1000);\n      }\n    } catch (e) {\n      callback({\n        message: e\n      });\n    }\n  };\n\n  check(attempts);\n};\n/**\n * Evalute an Angular expression in the context of a given element.\n *\n * @param {Element} element The element in whose scope to evaluate.\n * @param {string} expression The expression to evaluate.\n *\n * @return {?Object} The result of the evaluation.\n */\n\n\nfunctions.evaluate = function (element, expression) {\n  return angular.element(element).scope().$eval(expression);\n};\n\nfunctions.allowAnimations = function (element, value) {\n  var ngElement = angular.element(element);\n\n  if (ngElement.allowAnimations) {\n    // AngularDart: $testability API.\n    return ngElement.allowAnimations(value);\n  } else {\n    // AngularJS\n    var enabledFn = ngElement.injector().get('$animate').enabled;\n    return value == null ? enabledFn() : enabledFn(value);\n  }\n};\n/**\n * Return the current url using $location.absUrl().\n *\n * @param {string} selector The selector housing an ng-app\n */\n\n\nfunctions.getLocationAbsUrl = function (selector) {\n  var hooks = getNg1Hooks(selector);\n\n  if (angular.getTestability) {\n    return hooks.$$testability.getLocation();\n  }\n\n  return hooks.$injector.get('$location').absUrl();\n};\n/**\n * Browse to another page using in-page navigation.\n *\n * @param {string} selector The selector housing an ng-app\n * @param {string} url In page URL using the same syntax as $location.url(),\n *     /path?search=a&b=c#hash\n */\n\n\nfunctions.setLocation = function (selector, url) {\n  var hooks = getNg1Hooks(selector);\n\n  if (angular.getTestability) {\n    return hooks.$$testability.setLocation(url);\n  }\n\n  var $injector = hooks.$injector;\n  var $location = $injector.get('$location');\n  var $rootScope = $injector.get('$rootScope');\n\n  if (url !== $location.url()) {\n    $location.url(url);\n    $rootScope.$digest();\n  }\n};\n/**\n * Retrieve the pending $http requests.\n *\n * @param {string} selector The selector housing an ng-app\n * @return {!Array<!Object>} An array of pending http requests.\n */\n\n\nfunctions.getPendingHttpRequests = function (selector) {\n  var hooks = getNg1Hooks(selector, true);\n  var $http = hooks.$injector.get('$http');\n  return $http.pendingRequests;\n};\n\n['waitForAngular', 'findBindings', 'findByModel', 'getLocationAbsUrl', 'setLocation', 'getPendingHttpRequests'].forEach(function (funName) {\n  functions[funName] = wrapWithHelpers(functions[funName], getNg1Hooks);\n});\n/* Publish all the functions as strings to pass to WebDriver's\n * exec[Async]Script.  In addition, also include a script that will\n * install all the functions on window (for debugging.)\n *\n * We also wrap any exceptions thrown by a clientSideScripts function\n * that is not an instance of the Error type into an Error type.  If we\n * don't do so, then the resulting stack trace is completely unhelpful\n * and the exception message is just \"unknown error.\"  These types of\n * exceptions are the common case for dart2js code.  This wrapping gives\n * us the Dart stack trace and exception message.\n */\n\nvar util = require('util');\n\nvar scriptsList = [];\nvar scriptFmt = 'try { return (%s).apply(this, arguments); }\\n' + 'catch(e) { throw (e instanceof Error) ? e : new Error(e); }';\n\nfor (var fnName in functions) {\n  if (functions.hasOwnProperty(fnName)) {\n    exports[fnName] = util.format(scriptFmt, functions[fnName]);\n    scriptsList.push(util.format('%s: %s', fnName, functions[fnName]));\n  }\n}\n\nexports.installInBrowser = util.format('window.clientSideScripts = {%s};', scriptsList.join(', '));\n/**\n * Automatically installed by Protractor when a page is loaded, this\n * default mock module decorates $timeout to keep track of any\n * outstanding timeouts.\n *\n * @param {boolean} trackOutstandingTimeouts\n */\n\nexports.protractorBaseModuleFn = function (trackOutstandingTimeouts) {\n  var ngMod = angular.module('protractorBaseModule_', []).config(['$compileProvider', function ($compileProvider) {\n    if ($compileProvider.debugInfoEnabled) {\n      $compileProvider.debugInfoEnabled(true);\n    }\n  }]);\n\n  if (trackOutstandingTimeouts) {\n    ngMod.config(['$provide', function ($provide) {\n      $provide.decorator('$timeout', ['$delegate', function ($delegate) {\n        var $timeout = $delegate;\n        var taskId = 0;\n\n        if (!window['NG_PENDING_TIMEOUTS']) {\n          window['NG_PENDING_TIMEOUTS'] = {};\n        }\n\n        var extendedTimeout = function () {\n          var args = Array.prototype.slice.call(arguments);\n\n          if (typeof args[0] !== 'function') {\n            return $timeout.apply(null, args);\n          }\n\n          taskId++;\n          var fn = args[0];\n          window['NG_PENDING_TIMEOUTS'][taskId] = fn.toString();\n\n          var wrappedFn = function (taskId_) {\n            return function () {\n              delete window['NG_PENDING_TIMEOUTS'][taskId_];\n              return fn.apply(null, arguments);\n            };\n          }(taskId);\n\n          args[0] = wrappedFn;\n          var promise = $timeout.apply(null, args);\n          promise.ptorTaskId_ = taskId;\n          return promise;\n        };\n\n        extendedTimeout.cancel = function () {\n          var taskId_ = arguments[0] && arguments[0].ptorTaskId_;\n\n          if (taskId_) {\n            delete window['NG_PENDING_TIMEOUTS'][taskId_];\n          }\n\n          return $timeout.cancel.apply($timeout, arguments);\n        };\n\n        return extendedTimeout;\n      }]);\n    }]);\n  }\n};","map":{"version":3,"names":["functions","wrapWithHelpers","fun","helpers","Array","prototype","slice","call","arguments","length","FunClass","Function","join","String","fromCharCode","toString","repeaterMatch","ngRepeat","repeater","exact","split","trim","indexOf","getNg1Hooks","selector","injectorPlease","tryEl","el","angular","getTestability","$$testability","$injector","element","injector","err","trySelector","els","document","querySelectorAll","i","elHooks","window","__TESTABILITY__NG1_APP_ROOT_INJECTOR__","get","e","body","waitForAngular","rootSelector","callback","testCallback","waitForAngular1","hooks","whenStable","notifyWhenNoOutstandingRequests","Error","location","waitForAngular2","getAngularTestability","testability","querySelector","testabilities","getAllAngularTestabilities","count","decrement","forEach","message","findBindings","binding","exactMatch","using","bindings","getElementsByClassName","matches","dataBinding","data","bindingName","exp","matcher","RegExp","replace","test","push","findRepeaterRows","index","prefixes","rows","p","attr","repeatElems","getAttribute","multiRows","elem","row","nodeType","nodeValue","nextSibling","multiRow","concat","findAllRepeaterRows","findRepeaterElement","apply","className","childBindings","rowElem","j","findRepeaterColumn","k","findByModel","model","findModels","elements","findByOptions","optionsDescriptor","findByButtonText","searchText","elementText","tagName","toLowerCase","textContent","innerText","value","findByPartialButtonText","findByCssContainingText","cssSelector","match","elementMatches","testForAngular","attempts","ng12Hybrid","asyncCallback","args","setTimeout","definitelyNg1","definitelyNg2OrNewer","check","n","version","major","resumeBootstrap","ver","evaluate","expression","scope","$eval","allowAnimations","ngElement","enabledFn","enabled","getLocationAbsUrl","getLocation","absUrl","setLocation","url","$location","$rootScope","$digest","getPendingHttpRequests","$http","pendingRequests","funName","util","require","scriptsList","scriptFmt","fnName","hasOwnProperty","exports","format","installInBrowser","protractorBaseModuleFn","trackOutstandingTimeouts","ngMod","module","config","$compileProvider","debugInfoEnabled","$provide","decorator","$delegate","$timeout","taskId","extendedTimeout","fn","wrappedFn","taskId_","promise","ptorTaskId_","cancel"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/protractor/built/clientsidescripts.js"],"sourcesContent":["/**\n * All scripts to be run on the client via executeAsyncScript or\n * executeScript should be put here.\n *\n * NOTE: These scripts are transmitted over the wire as JavaScript text\n * constructed using their toString representation, and *cannot*\n * reference external variables.\n *\n * Some implementations seem to have issues with // comments, so use star-style\n * inside scripts.  (TODO: add issue number / example implementations\n * that caused the switch to avoid the // comments.)\n */\n\n// jshint browser: true\n// jshint shadow: true\n/* global angular */\nvar functions = {};\n\n///////////////////////////////////////////////////////\n////                                               ////\n////                    HELPERS                    ////\n////                                               ////\n///////////////////////////////////////////////////////\n\n\n/* Wraps a function up into a string with its helper functions so that it can\n * call those helper functions client side\n *\n * @param {function} fun The function to wrap up with its helpers\n * @param {...function} The helper functions.  Each function must be named\n *\n * @return {string} The string which, when executed, will invoke fun in such a\n *   way that it has access to its helper functions\n */\nfunction wrapWithHelpers(fun) {\n  var helpers = Array.prototype.slice.call(arguments, 1);\n  if (!helpers.length) {\n    return fun;\n  }\n  var FunClass = Function; // Get the linter to allow this eval\n  return new FunClass(\n      helpers.join(';') + String.fromCharCode(59) +\n      '  return (' + fun.toString() + ').apply(this, arguments);');\n}\n\n/* Tests if an ngRepeat matches a repeater\n *\n * @param {string} ngRepeat The ngRepeat to test\n * @param {string} repeater The repeater to test against\n * @param {boolean} exact If the ngRepeat expression needs to match the whole\n *   repeater (not counting any `track by ...` modifier) or if it just needs to\n *   match a substring\n * @return {boolean} If the ngRepeat matched the repeater\n */\nfunction repeaterMatch(ngRepeat, repeater, exact) {\n  if (exact) {\n    return ngRepeat.split(' track by ')[0].split(' as ')[0].split('|')[0].\n        split('=')[0].trim() == repeater;\n  } else {\n    return ngRepeat.indexOf(repeater) != -1;\n  }\n}\n\n/* Tries to find $$testability and possibly $injector for an ng1 app\n *\n * By default, doesn't care about $injector if it finds $$testability.  However,\n * these priorities can be reversed.\n *\n * @param {string=} selector The selector for the element with the injector.  If\n *   falsy, tries a variety of methods to find an injector\n * @param {boolean=} injectorPlease Prioritize finding an injector\n * @return {$$testability?: Testability, $injector?: Injector} Returns whatever\n *   ng1 app hooks it finds\n */\nfunction getNg1Hooks(selector, injectorPlease) {\n  function tryEl(el) {\n    try {\n      if (!injectorPlease && angular.getTestability) {\n        var $$testability = angular.getTestability(el);\n        if ($$testability) {\n          return {$$testability: $$testability};\n        }\n      } else {\n        var $injector = angular.element(el).injector();\n        if ($injector) {\n          return {$injector: $injector};\n        }\n      }\n    } catch(err) {}\n  }\n  function trySelector(selector) {\n    var els = document.querySelectorAll(selector);\n    for (var i = 0; i < els.length; i++) {\n      var elHooks = tryEl(els[i]);\n      if (elHooks) {\n        return elHooks;\n      }\n    }\n  }\n\n  if (selector) {\n    return trySelector(selector);\n  } else if (window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__) {\n    var $injector = window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__;\n    var $$testability = null;\n    try {\n      $$testability = $injector.get('$$testability');\n    } catch (e) {}\n    return {$injector: $injector, $$testability: $$testability};\n  } else {\n    return tryEl(document.body) ||\n        trySelector('[ng-app]') || trySelector('[ng\\\\:app]') ||\n        trySelector('[ng-controller]') || trySelector('[ng\\\\:controller]');\n  }\n}\n\n///////////////////////////////////////////////////////\n////                                               ////\n////                    SCRIPTS                    ////\n////                                               ////\n///////////////////////////////////////////////////////\n\n\n/**\n * Wait until Angular has finished rendering and has\n * no outstanding $http calls before continuing. The specific Angular app\n * is determined by the rootSelector.\n *\n * Asynchronous.\n *\n * @param {string} rootSelector The selector housing an ng-app\n * @param {function(string)} callback callback. If a failure occurs, it will\n *     be passed as a parameter.\n */\nfunctions.waitForAngular = function(rootSelector, callback) {\n\n  try {\n    // Wait for both angular1 testability and angular2 testability.\n\n    var testCallback = callback;\n\n    // Wait for angular1 testability first and run waitForAngular2 as a callback\n    var waitForAngular1 = function(callback) {\n\n      if (window.angular) {\n        var hooks = getNg1Hooks(rootSelector);\n        if (!hooks){\n          callback();  // not an angular1 app\n        }\n        else{\n          if (hooks.$$testability) {\n            hooks.$$testability.whenStable(callback);\n          } else if (hooks.$injector) {\n            hooks.$injector.get('$browser')\n                .notifyWhenNoOutstandingRequests(callback);\n          } else if (!rootSelector) {\n            throw new Error(\n                'Could not automatically find injector on page: \"' +\n                window.location.toString() + '\".  Consider using config.rootEl');\n          } else {\n            throw new Error(\n                'root element (' + rootSelector + ') has no injector.' +\n                ' this may mean it is not inside ng-app.');\n          }\n        }\n      }\n      else {callback();}  // not an angular1 app\n    };\n\n    // Wait for Angular2 testability and then run test callback\n    var waitForAngular2 = function() {\n      if (window.getAngularTestability) {\n        if (rootSelector) {\n          var testability = null;\n          var el = document.querySelector(rootSelector);\n          try{\n            testability = window.getAngularTestability(el);\n          }\n          catch(e){}\n          if (testability) {\n            testability.whenStable(testCallback);\n            return;\n          }\n        }\n\n        // Didn't specify root element or testability could not be found\n        // by rootSelector. This may happen in a hybrid app, which could have\n        // more than one root.\n        var testabilities = window.getAllAngularTestabilities();\n        var count = testabilities.length;\n\n        // No angular2 testability, this happens when\n        // going to a hybrid page and going back to a pure angular1 page\n        if (count === 0) {\n          testCallback();\n          return;\n        }\n\n        var decrement = function() {\n          count--;\n          if (count === 0) {\n            testCallback();\n          }\n        };\n        testabilities.forEach(function(testability) {\n          testability.whenStable(decrement);\n        });\n\n      }\n      else {testCallback();}  // not an angular2 app\n    };\n\n    if (!(window.angular) && !(window.getAngularTestability)) {\n      // no testability hook\n      throw new Error(\n          'both angularJS testability and angular testability are undefined.' +\n          '  This could be either ' +\n          'because this is a non-angular page or because your test involves ' +\n          'client-side navigation, which can interfere with Protractor\\'s ' +\n          'bootstrapping.  See http://git.io/v4gXM for details');\n    } else {waitForAngular1(waitForAngular2);}  // Wait for angular1 and angular2\n                                                // Testability hooks sequentially\n\n  } catch (err) {\n    callback(err.message);\n  }\n\n};\n\n/**\n * Find a list of elements in the page by their angular binding.\n *\n * @param {string} binding The binding, e.g. {{cat.name}}.\n * @param {boolean} exactMatch Whether the binding needs to be matched exactly\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The elements containing the binding.\n */\nfunctions.findBindings = function(binding, exactMatch, using, rootSelector) {\n  using = using || document;\n  if (angular.getTestability) {\n    return getNg1Hooks(rootSelector).$$testability.\n        findBindings(using, binding, exactMatch);\n  }\n  var bindings = using.getElementsByClassName('ng-binding');\n  var matches = [];\n  for (var i = 0; i < bindings.length; ++i) {\n    var dataBinding = angular.element(bindings[i]).data('$binding');\n    if (dataBinding) {\n      var bindingName = dataBinding.exp || dataBinding[0].exp || dataBinding;\n      if (exactMatch) {\n        var matcher = new RegExp('({|\\\\s|^|\\\\|)' +\n            /* See http://stackoverflow.com/q/3561711 */\n            binding.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&') +\n            '(}|\\\\s|$|\\\\|)');\n        if (matcher.test(bindingName)) {\n          matches.push(bindings[i]);\n        }\n      } else {\n        if (bindingName.indexOf(binding) != -1) {\n          matches.push(bindings[i]);\n        }\n      }\n\n    }\n  }\n  return matches; /* Return the whole array for webdriver.findElements. */\n};\n\n/**\n * Find an array of elements matching a row within an ng-repeat.\n * Always returns an array of only one element for plain old ng-repeat.\n * Returns an array of all the elements in one segment for ng-repeat-start.\n *\n * @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n * @param {boolean} exact Whether the repeater needs to be matched exactly\n * @param {number} index The row index.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The row of the repeater, or an array of elements\n *     in the first row in the case of ng-repeat-start.\n */\nfunction findRepeaterRows(repeater, exact, index, using) {\n  using = using || document;\n\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n  var rows = [];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n  /* multiRows is an array of arrays, where each inner array contains\n     one row of elements. */\n  var multiRows = [];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n        var row = [];\n        while (elem.nodeType != 8 ||\n            !repeaterMatch(elem.nodeValue, repeater)) {\n          if (elem.nodeType == 1) {\n            row.push(elem);\n          }\n          elem = elem.nextSibling;\n        }\n        multiRows.push(row);\n      }\n    }\n  }\n  var row = rows[index] || [], multiRow = multiRows[index] || [];\n  return [].concat(row, multiRow);\n}\nfunctions.findRepeaterRows = wrapWithHelpers(findRepeaterRows, repeaterMatch);\n\n /**\n * Find all rows of an ng-repeat.\n *\n * @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n * @param {boolean} exact Whether the repeater needs to be matched exactly\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} All rows of the repeater.\n */\nfunction findAllRepeaterRows(repeater, exact, using) {\n  using = using || document;\n\n  var rows = [];\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n        while (elem.nodeType != 8 ||\n            !repeaterMatch(elem.nodeValue, repeater)) {\n          if (elem.nodeType == 1) {\n            rows.push(elem);\n          }\n          elem = elem.nextSibling;\n        }\n      }\n    }\n  }\n  return rows;\n}\nfunctions.findAllRepeaterRows = wrapWithHelpers(findAllRepeaterRows, repeaterMatch);\n\n/**\n * Find an element within an ng-repeat by its row and column.\n *\n * @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n * @param {boolean} exact Whether the repeater needs to be matched exactly\n * @param {number} index The row index.\n * @param {string} binding The column binding, e.g. '{{cat.name}}'.\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The element in an array.\n */\nfunction findRepeaterElement(repeater, exact, index, binding, using, rootSelector) {\n  var matches = [];\n  using = using || document;\n\n  var rows = [];\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n  /* multiRows is an array of arrays, where each inner array contains\n     one row of elements. */\n  var multiRows = [];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n        var row = [];\n        while (elem.nodeType != 8 || (elem.nodeValue &&\n            !repeaterMatch(elem.nodeValue, repeater))) {\n          if (elem.nodeType == 1) {\n            row.push(elem);\n          }\n          elem = elem.nextSibling;\n        }\n        multiRows.push(row);\n      }\n    }\n  }\n  var row = rows[index];\n  var multiRow = multiRows[index];\n  var bindings = [];\n  if (row) {\n    if (angular.getTestability) {\n      matches.push.apply(\n          matches,\n          getNg1Hooks(rootSelector).$$testability.findBindings(row, binding));\n    } else {\n      if (row.className.indexOf('ng-binding') != -1) {\n        bindings.push(row);\n      }\n      var childBindings = row.getElementsByClassName('ng-binding');\n      for (var i = 0; i < childBindings.length; ++i) {\n        bindings.push(childBindings[i]);\n      }\n    }\n  }\n  if (multiRow) {\n    for (var i = 0; i < multiRow.length; ++i) {\n      var rowElem = multiRow[i];\n      if (angular.getTestability) {\n        matches.push.apply(\n            matches,\n            getNg1Hooks(rootSelector).$$testability.findBindings(rowElem,\n                binding));\n      } else {\n        if (rowElem.className.indexOf('ng-binding') != -1) {\n          bindings.push(rowElem);\n        }\n        var childBindings = rowElem.getElementsByClassName('ng-binding');\n        for (var j = 0; j < childBindings.length; ++j) {\n          bindings.push(childBindings[j]);\n        }\n      }\n    }\n  }\n  for (var i = 0; i < bindings.length; ++i) {\n    var dataBinding = angular.element(bindings[i]).data('$binding');\n    if (dataBinding) {\n      var bindingName = dataBinding.exp || dataBinding[0].exp || dataBinding;\n      if (bindingName.indexOf(binding) != -1) {\n        matches.push(bindings[i]);\n      }\n    }\n  }\n  return matches;\n}\nfunctions.findRepeaterElement =\n    wrapWithHelpers(findRepeaterElement, repeaterMatch, getNg1Hooks);\n\n/**\n * Find the elements in a column of an ng-repeat.\n *\n * @param {string} repeater The text of the repeater, e.g. 'cat in cats'.\n * @param {boolean} exact Whether the repeater needs to be matched exactly\n * @param {string} binding The column binding, e.g. '{{cat.name}}'.\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The elements in the column.\n */\nfunction findRepeaterColumn(repeater, exact, binding, using, rootSelector) {\n  var matches = [];\n  using = using || document;\n\n  var rows = [];\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        rows.push(repeatElems[i]);\n      }\n    }\n  }\n  /* multiRows is an array of arrays, where each inner array contains\n     one row of elements. */\n  var multiRows = [];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var attr = prefixes[p] + 'repeat-start';\n    var repeatElems = using.querySelectorAll('[' + attr + ']');\n    attr = attr.replace(/\\\\/g, '');\n    for (var i = 0; i < repeatElems.length; ++i) {\n      if (repeaterMatch(repeatElems[i].getAttribute(attr), repeater, exact)) {\n        var elem = repeatElems[i];\n        var row = [];\n        while (elem.nodeType != 8 || (elem.nodeValue &&\n            !repeaterMatch(elem.nodeValue, repeater))) {\n          if (elem.nodeType == 1) {\n            row.push(elem);\n          }\n          elem = elem.nextSibling;\n        }\n        multiRows.push(row);\n      }\n    }\n  }\n  var bindings = [];\n  for (var i = 0; i < rows.length; ++i) {\n    if (angular.getTestability) {\n      matches.push.apply(\n          matches,\n          getNg1Hooks(rootSelector).$$testability.findBindings(rows[i],\n              binding));\n    } else {\n      if (rows[i].className.indexOf('ng-binding') != -1) {\n        bindings.push(rows[i]);\n      }\n      var childBindings = rows[i].getElementsByClassName('ng-binding');\n      for (var k = 0; k < childBindings.length; ++k) {\n        bindings.push(childBindings[k]);\n      }\n    }\n  }\n  for (var i = 0; i < multiRows.length; ++i) {\n    for (var j = 0; j < multiRows[i].length; ++j) {\n      if (angular.getTestability) {\n        matches.push.apply(\n            matches,\n            getNg1Hooks(rootSelector).$$testability.findBindings(\n                multiRows[i][j], binding));\n      } else {\n        var elem = multiRows[i][j];\n        if (elem.className.indexOf('ng-binding') != -1) {\n          bindings.push(elem);\n        }\n        var childBindings = elem.getElementsByClassName('ng-binding');\n        for (var k = 0; k < childBindings.length; ++k) {\n          bindings.push(childBindings[k]);\n        }\n      }\n    }\n  }\n  for (var j = 0; j < bindings.length; ++j) {\n    var dataBinding = angular.element(bindings[j]).data('$binding');\n    if (dataBinding) {\n      var bindingName = dataBinding.exp || dataBinding[0].exp || dataBinding;\n      if (bindingName.indexOf(binding) != -1) {\n        matches.push(bindings[j]);\n      }\n    }\n  }\n  return matches;\n}\nfunctions.findRepeaterColumn =\n    wrapWithHelpers(findRepeaterColumn, repeaterMatch, getNg1Hooks);\n\n/**\n * Find elements by model name.\n *\n * @param {string} model The model name.\n * @param {Element} using The scope of the search.\n * @param {string} rootSelector The selector to use for the root app element.\n *\n * @return {Array.<Element>} The matching elements.\n */\nfunctions.findByModel = function(model, using, rootSelector) {\n  using = using || document;\n\n  if (angular.getTestability) {\n    return getNg1Hooks(rootSelector).$$testability.\n        findModels(using, model, true);\n  }\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var selector = '[' + prefixes[p] + 'model=\"' + model + '\"]';\n    var elements = using.querySelectorAll(selector);\n    if (elements.length) {\n      return elements;\n    }\n  }\n};\n\n/**\n * Find elements by options.\n *\n * @param {string} optionsDescriptor The descriptor for the option\n *     (i.e. fruit for fruit in fruits).\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The matching elements.\n */\nfunctions.findByOptions = function(optionsDescriptor, using) {\n  using = using || document;\n\n  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\\\:'];\n  for (var p = 0; p < prefixes.length; ++p) {\n    var selector = '[' + prefixes[p] + 'options=\"' + optionsDescriptor + '\"] option';\n    var elements = using.querySelectorAll(selector);\n    if (elements.length) {\n      return elements;\n    }\n  }\n};\n\n/**\n * Find buttons by textual content.\n *\n * @param {string} searchText The exact text to match.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The matching elements.\n */\nfunctions.findByButtonText = function(searchText, using) {\n  using = using || document;\n\n  var elements = using.querySelectorAll('button, input[type=\"button\"], input[type=\"submit\"]');\n  var matches = [];\n  for (var i = 0; i < elements.length; ++i) {\n    var element = elements[i];\n    var elementText;\n    if (element.tagName.toLowerCase() == 'button') {\n      elementText = element.textContent || element.innerText || '';\n    } else {\n      elementText = element.value;\n    }\n    if (elementText.trim() === searchText) {\n      matches.push(element);\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Find buttons by textual content.\n *\n * @param {string} searchText The exact text to match.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} The matching elements.\n */\nfunctions.findByPartialButtonText = function(searchText, using) {\n  using = using || document;\n\n  var elements = using.querySelectorAll('button, input[type=\"button\"], input[type=\"submit\"]');\n  var matches = [];\n  for (var i = 0; i < elements.length; ++i) {\n    var element = elements[i];\n    var elementText;\n    if (element.tagName.toLowerCase() == 'button') {\n      elementText = element.textContent || element.innerText || '';\n    } else {\n      elementText = element.value;\n    }\n    if (elementText.indexOf(searchText) > -1) {\n      matches.push(element);\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Find elements by css selector and textual content.\n *\n * @param {string} cssSelector The css selector to match.\n * @param {string} searchText The exact text to match or a serialized regex.\n * @param {Element} using The scope of the search.\n *\n * @return {Array.<Element>} An array of matching elements.\n */\nfunctions.findByCssContainingText = function(cssSelector, searchText, using) {\n  using = using || document;\n\n  if (searchText.indexOf('__REGEXP__') === 0) {\n    var match = searchText.split('__REGEXP__')[1].match(/\\/(.*)\\/(.*)?/);\n    searchText = new RegExp(match[1], match[2] || '');\n  }\n  var elements = using.querySelectorAll(cssSelector);\n  var matches = [];\n  for (var i = 0; i < elements.length; ++i) {\n    var element = elements[i];\n    var elementText = element.textContent || element.innerText || '';\n    var elementMatches = searchText instanceof RegExp ?\n        searchText.test(elementText) :\n        elementText.indexOf(searchText) > -1;\n\n    if (elementMatches) {\n      matches.push(element);\n    }\n  }\n  return matches;\n};\n\n/**\n * Tests whether the angular global variable is present on a page. Retries\n * in case the page is just loading slowly.\n *\n * Asynchronous.\n *\n * @param {number} attempts Number of times to retry.\n * @param {boolean} ng12Hybrid Flag set if app is a hybrid of angular 1 and 2\n * @param {function({version: ?number, message: ?string})} asyncCallback callback\n *\n */\nfunctions.testForAngular = function(attempts, ng12Hybrid, asyncCallback) {\n  var callback = function(args) {\n    setTimeout(function() {\n      asyncCallback(args);\n    }, 0);\n  };\n  var definitelyNg1 = !!ng12Hybrid;\n  var definitelyNg2OrNewer = false;\n  var check = function(n) {\n    try {\n      /* Figure out which version of angular we're waiting on */\n      if (!definitelyNg1 && !definitelyNg2OrNewer) {\n        if (window.angular && !(window.angular.version && window.angular.version.major > 1)) {\n          definitelyNg1 = true;\n        } else if (window.getAllAngularTestabilities) {\n          definitelyNg2OrNewer = true;\n        }\n      }\n      /* See if our version of angular is ready */\n      if (definitelyNg1) {\n        if (window.angular && window.angular.resumeBootstrap) {\n          return callback({ver: 1});\n        }\n      } else if (definitelyNg2OrNewer) {\n        if (true /* ng2 has no resumeBootstrap() */) {\n          return callback({ver: 2});\n        }\n      }\n      /* Try again (or fail) */\n      if (n < 1) {\n        if (definitelyNg1 && window.angular) {\n          callback({message: 'angular never provided resumeBootstrap'});\n        } else if (ng12Hybrid && !window.angular) {\n          callback({message: 'angular 1 never loaded' +\n              window.getAllAngularTestabilities ? ' (are you sure this app ' +\n              'uses ngUpgrade?  Try un-setting ng12Hybrid)' : ''});\n        } else {\n          callback({message: 'retries looking for angular exceeded'});\n        }\n      } else {\n        window.setTimeout(function() {check(n - 1);}, 1000);\n      }\n    } catch (e) {\n      callback({message: e});\n    }\n  };\n  check(attempts);\n};\n\n/**\n * Evalute an Angular expression in the context of a given element.\n *\n * @param {Element} element The element in whose scope to evaluate.\n * @param {string} expression The expression to evaluate.\n *\n * @return {?Object} The result of the evaluation.\n */\nfunctions.evaluate = function(element, expression) {\n  return angular.element(element).scope().$eval(expression);\n};\n\nfunctions.allowAnimations = function(element, value) {\n  var ngElement = angular.element(element);\n  if (ngElement.allowAnimations) {\n    // AngularDart: $testability API.\n    return ngElement.allowAnimations(value);\n  } else {\n    // AngularJS\n    var enabledFn = ngElement.injector().get('$animate').enabled;\n    return (value == null) ? enabledFn() : enabledFn(value);\n  }\n};\n\n/**\n * Return the current url using $location.absUrl().\n *\n * @param {string} selector The selector housing an ng-app\n */\nfunctions.getLocationAbsUrl = function(selector) {\n  var hooks = getNg1Hooks(selector);\n  if (angular.getTestability) {\n    return hooks.$$testability.getLocation();\n  }\n  return hooks.$injector.get('$location').absUrl();\n};\n\n/**\n * Browse to another page using in-page navigation.\n *\n * @param {string} selector The selector housing an ng-app\n * @param {string} url In page URL using the same syntax as $location.url(),\n *     /path?search=a&b=c#hash\n */\nfunctions.setLocation = function(selector, url) {\n  var hooks = getNg1Hooks(selector);\n  if (angular.getTestability) {\n    return hooks.$$testability.setLocation(url);\n  }\n  var $injector = hooks.$injector;\n  var $location = $injector.get('$location');\n  var $rootScope = $injector.get('$rootScope');\n\n  if (url !== $location.url()) {\n    $location.url(url);\n    $rootScope.$digest();\n  }\n};\n\n/**\n * Retrieve the pending $http requests.\n *\n * @param {string} selector The selector housing an ng-app\n * @return {!Array<!Object>} An array of pending http requests.\n */\nfunctions.getPendingHttpRequests = function(selector) {\n  var hooks = getNg1Hooks(selector, true);\n  var $http = hooks.$injector.get('$http');\n  return $http.pendingRequests;\n};\n\n['waitForAngular', 'findBindings', 'findByModel', 'getLocationAbsUrl',\n  'setLocation', 'getPendingHttpRequests'].forEach(function(funName) {\n    functions[funName] = wrapWithHelpers(functions[funName], getNg1Hooks);\n});\n\n/* Publish all the functions as strings to pass to WebDriver's\n * exec[Async]Script.  In addition, also include a script that will\n * install all the functions on window (for debugging.)\n *\n * We also wrap any exceptions thrown by a clientSideScripts function\n * that is not an instance of the Error type into an Error type.  If we\n * don't do so, then the resulting stack trace is completely unhelpful\n * and the exception message is just \"unknown error.\"  These types of\n * exceptions are the common case for dart2js code.  This wrapping gives\n * us the Dart stack trace and exception message.\n */\nvar util = require('util');\nvar scriptsList = [];\nvar scriptFmt = (\n    'try { return (%s).apply(this, arguments); }\\n' +\n    'catch(e) { throw (e instanceof Error) ? e : new Error(e); }');\nfor (var fnName in functions) {\n  if (functions.hasOwnProperty(fnName)) {\n    exports[fnName] = util.format(scriptFmt, functions[fnName]);\n    scriptsList.push(util.format('%s: %s', fnName, functions[fnName]));\n  }\n}\n\nexports.installInBrowser = (util.format(\n    'window.clientSideScripts = {%s};', scriptsList.join(', ')));\n\n/**\n * Automatically installed by Protractor when a page is loaded, this\n * default mock module decorates $timeout to keep track of any\n * outstanding timeouts.\n *\n * @param {boolean} trackOutstandingTimeouts\n */\nexports.protractorBaseModuleFn = function(trackOutstandingTimeouts) {\n  var ngMod = angular.module('protractorBaseModule_', []).config([\n    '$compileProvider',\n    function($compileProvider) {\n      if ($compileProvider.debugInfoEnabled) {\n        $compileProvider.debugInfoEnabled(true);\n      }\n    }\n  ]);\n  if (trackOutstandingTimeouts) {\n    ngMod.config([\n      '$provide',\n      function ($provide) {\n        $provide.decorator('$timeout', [\n          '$delegate',\n          function ($delegate) {\n            var $timeout = $delegate;\n\n            var taskId = 0;\n\n            if (!window['NG_PENDING_TIMEOUTS']) {\n              window['NG_PENDING_TIMEOUTS'] = {};\n            }\n\n            var extendedTimeout= function() {\n              var args = Array.prototype.slice.call(arguments);\n              if (typeof(args[0]) !== 'function') {\n                return $timeout.apply(null, args);\n              }\n\n              taskId++;\n              var fn = args[0];\n              window['NG_PENDING_TIMEOUTS'][taskId] =\n                  fn.toString();\n              var wrappedFn = (function(taskId_) {\n                return function() {\n                  delete window['NG_PENDING_TIMEOUTS'][taskId_];\n                  return fn.apply(null, arguments);\n                };\n              })(taskId);\n              args[0] = wrappedFn;\n\n              var promise = $timeout.apply(null, args);\n              promise.ptorTaskId_ = taskId;\n              return promise;\n            };\n\n            extendedTimeout.cancel = function() {\n              var taskId_ = arguments[0] && arguments[0].ptorTaskId_;\n              if (taskId_) {\n                delete window['NG_PENDING_TIMEOUTS'][taskId_];\n              }\n              return $timeout.cancel.apply($timeout, arguments);\n            };\n\n            return extendedTimeout;\n          }\n        ]);\n      }\n    ]);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}