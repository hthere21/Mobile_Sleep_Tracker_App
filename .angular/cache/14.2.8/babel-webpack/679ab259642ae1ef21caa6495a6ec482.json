{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](http://selenium-release.storage.googleapis.com/index.html)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n'use strict';\n\nconst fs = require('fs'),\n      util = require('util');\n\nconst http = require('./http'),\n      io = require('./io'),\n      capabilities = require('./lib/capabilities'),\n      promise = require('./lib/promise'),\n      webdriver = require('./lib/webdriver'),\n      portprober = require('./net/portprober'),\n      remote = require('./remote');\n\nconst IEDRIVER_EXE = 'IEDriverServer.exe';\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\n\nconst Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE'\n};\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\n\nconst Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent'\n};\n/**\n * Class for managing IEDriver specific options.\n */\n\nclass Options {\n  constructor() {\n    /** @private {!Object<(boolean|number|string|!Array<string>)>} */\n    this.options_ = {};\n    /** @private {(capabilities.ProxyConfig|null)} */\n\n    this.proxy_ = null;\n  }\n  /**\n   * Extracts the IEDriver specific options from the given capabilities\n   * object.\n   * @param {!capabilities.Capabilities} caps The capabilities object.\n   * @return {!Options} The IEDriver options.\n   */\n\n\n  static fromCapabilities(caps) {\n    var options = new Options();\n    var map = options.options_;\n    Object.keys(Key).forEach(function (key) {\n      key = Key[key];\n\n      if (caps.has(key)) {\n        map[key] = caps.get(key);\n      }\n    });\n\n    if (caps.has(capabilities.Capability.PROXY)) {\n      options.setProxy(caps.get(capabilities.Capability.PROXY));\n    }\n\n    return options;\n  }\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disbling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n\n\n  introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n    this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings;\n    return this;\n  }\n  /**\n   * Indicates whether to skip the check that the browser's zoom level is set to\n   * 100%.\n   *\n   * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n   * @return {!Options} A self reference.\n   */\n\n\n  ignoreZoomSetting(ignore) {\n    this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore;\n    return this;\n  }\n  /**\n   * Sets the initial URL loaded when IE starts. This is intended to be used with\n   * {@link #ignoreProtectedModeSettings} to allow the user to initialize IE in\n   * the proper Protected Mode zone. Setting this option may cause browser\n   * instability or flaky and unresponsive code. Only \"best effort\" support is\n   * provided when using this option.\n   *\n   * @param {string} url The initial browser URL.\n   * @return {!Options} A self reference.\n   */\n\n\n  initialBrowserUrl(url) {\n    this.options_[Key.INITIAL_BROWSER_URL] = url;\n    return this;\n  }\n  /**\n   * Configures whether to enable persistent mouse hovering (true by default).\n   * Persistent hovering is achieved by continuously firing mouse over events at\n   * the last location the mouse cursor has been moved to.\n   *\n   * @param {boolean} enable Whether to enable persistent hovering.\n   * @return {!Options} A self reference.\n   */\n\n\n  enablePersistentHover(enable) {\n    this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable;\n    return this;\n  }\n  /**\n   * Configures whether the driver should attempt to remove obsolete\n   * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n   * page navigation (true by default). Disabling this option will cause the\n   * driver to run with a larger memory footprint.\n   *\n   * @param {boolean} enable Whether to enable element reference cleanup.\n   * @return {!Options} A self reference.\n   */\n\n\n  enableElementCacheCleanup(enable) {\n    this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable;\n    return this;\n  }\n  /**\n   * Configures whether to require the IE window to have input focus before\n   * performing any user interactions (i.e. mouse or keyboard events). This\n   * option is disabled by default, but delivers much more accurate interaction\n   * events when enabled.\n   *\n   * @param {boolean} require Whether to require window focus.\n   * @return {!Options} A self reference.\n   */\n\n\n  requireWindowFocus(require) {\n    this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require;\n    return this;\n  }\n  /**\n   * Configures the timeout, in milliseconds, that the driver will attempt to\n   * located and attach to a newly opened instance of Internet Explorer. The\n   * default is zero, which indicates waiting indefinitely.\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n\n\n  browserAttachTimeout(timeout) {\n    this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0);\n    return this;\n  }\n  /**\n   * Configures whether to launch Internet Explorer using the CreateProcess API.\n   * If this option is not specified, IE is launched using IELaunchURL, if\n   * available. For IE 8 and above, this option requires the TabProcGrowth\n   * registry value to be set to 0.\n   *\n   * @param {boolean} force Whether to use the CreateProcess API.\n   * @return {!Options} A self reference.\n   */\n\n\n  forceCreateProcessApi(force) {\n    this.options_[Key.FORCE_CREATE_PROCESS] = !!force;\n    return this;\n  }\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} var_args The arguments to add.\n   * @return {!Options} A self reference.\n   */\n\n\n  addArguments(var_args) {\n    var args = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n    args = args.concat.apply(args, arguments);\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = args;\n    return this;\n  }\n  /**\n   * Configures whether proxies should be configured on a per-process basis. If\n   * not set, setting a {@linkplain #setProxy proxy} will configure the system\n   * proxy. The default behavior is to use the system proxy.\n   *\n   * @param {boolean} enable Whether to enable per-process proxy settings.\n   * @return {!Options} A self reference.\n   */\n\n\n  usePerProcessProxy(enable) {\n    this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable;\n    return this;\n  }\n  /**\n   * Configures whether to clear the cache, cookies, history, and saved form data\n   * before starting the browser. _Using this capability will clear session data\n   * for all running instances of Internet Explorer, including those started\n   * manually._\n   *\n   * @param {boolean} cleanSession Whether to clear all session data on startup.\n   * @return {!Options} A self reference.\n   */\n\n\n  ensureCleanSession(cleanSession) {\n    this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession;\n    return this;\n  }\n  /**\n   * Sets the path to the log file the driver should log to.\n   * @param {string} file The log file path.\n   * @return {!Options} A self reference.\n   */\n\n\n  setLogFile(file) {\n    this.options_[Key.LOG_FILE] = file;\n    return this;\n  }\n  /**\n   * Sets the IEDriverServer's logging {@linkplain Level level}.\n   * @param {Level} level The logging level.\n   * @return {!Options} A self reference.\n   */\n\n\n  setLogLevel(level) {\n    this.options_[Key.LOG_LEVEL] = level;\n    return this;\n  }\n  /**\n   * Sets the IP address of the driver's host adapter.\n   * @param {string} host The IP address to use.\n   * @return {!Options} A self reference.\n   */\n\n\n  setHost(host) {\n    this.options_[Key.HOST] = host;\n    return this;\n  }\n  /**\n   * Sets the path of the temporary data directory to use.\n   * @param {string} path The log file path.\n   * @return {!Options} A self reference.\n   */\n\n\n  setExtractPath(path) {\n    this.options_[Key.EXTRACT_PATH] = path;\n    return this;\n  }\n  /**\n   * Sets whether the driver should start in silent mode.\n   * @param {boolean} silent Whether to run in silent mode.\n   * @return {!Options} A self reference.\n   */\n\n\n  silent(silent) {\n    this.options_[Key.SILENT] = silent;\n    return this;\n  }\n  /**\n   * Sets the proxy settings for the new session.\n   * @param {capabilities.ProxyConfig} proxy The proxy configuration to use.\n   * @return {!Options} A self reference.\n   */\n\n\n  setProxy(proxy) {\n    this.proxy_ = proxy;\n    return this;\n  }\n  /**\n   * Converts this options instance to a {@link capabilities.Capabilities}\n   * object.\n   * @param {capabilities.Capabilities=} opt_capabilities The capabilities to\n   *     merge these options into, if any.\n   * @return {!capabilities.Capabilities} The capabilities.\n   */\n\n\n  toCapabilities(opt_capabilities) {\n    var caps = opt_capabilities || capabilities.Capabilities.ie();\n\n    if (this.proxy_) {\n      caps.set(capabilities.Capability.PROXY, this.proxy_);\n    }\n\n    Object.keys(this.options_).forEach(function (key) {\n      caps.set(key, this.options_[key]);\n    }, this);\n    return caps;\n  }\n\n}\n\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error('The IEDriver may only be used on Windows, but you appear to be on ' + process.platform + '. Did you mean to run against a remote ' + 'WebDriver server?');\n  }\n\n  let exe = io.findInPath(IEDRIVER_EXE, true);\n\n  if (!exe || !fs.existsSync(exe)) {\n    throw Error(`${IEDRIVER_EXE} could not be found on the current PATH. Please ` + `download the latest version of ${IEDRIVER_EXE} from ` + 'http://selenium-release.storage.googleapis.com/index.html and ' + 'ensure it can be found on your system PATH.');\n  }\n\n  var args = [];\n\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST));\n  }\n\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE));\n  }\n\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL));\n  }\n\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH));\n  }\n\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent');\n  }\n\n  var port = portprober.findFreePort();\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function (port) {\n      return args.concat('--port=' + port);\n    }),\n    stdio: 'ignore'\n  });\n}\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\n\n\nclass Driver extends webdriver.WebDriver {\n  /**\n   * Creates a new session for Microsoft's Internet Explorer.\n   *\n   * @param {(capabilities.Capabilities|Options)=} opt_config The configuration\n   *     options.\n   * @param {promise.ControlFlow=} opt_flow The control flow to use,\n   *     or {@code null} to use the currently active flow.\n   * @return {!Driver} A new driver instance.\n   */\n  static createSession(opt_config, opt_flow) {\n    var caps = opt_config instanceof Options ? opt_config.toCapabilities() : opt_config || capabilities.Capabilities.ie();\n    var service = createServiceFromCapabilities(caps);\n    var client = service.start().then(url => new http.HttpClient(url));\n    var executor = new http.Executor(client);\n    return (\n      /** @type {!Driver} */\n      super.createSession(executor, caps, opt_flow, () => service.kill())\n    );\n  }\n  /**\n   * This function is a no-op as file detectors are not supported by this\n   * implementation.\n   * @override\n   */\n\n\n  setFileDetector() {}\n\n} // PUBLIC API\n\n\nexports.Driver = Driver;\nexports.Options = Options;\nexports.Level = Level;","map":{"version":3,"names":["fs","require","util","http","io","capabilities","promise","webdriver","portprober","remote","IEDRIVER_EXE","Level","FATAL","ERROR","WARN","INFO","DEBUG","TRACE","Key","IGNORE_PROTECTED_MODE_SETTINGS","IGNORE_ZOOM_SETTING","INITIAL_BROWSER_URL","ENABLE_PERSISTENT_HOVER","ENABLE_ELEMENT_CACHE_CLEANUP","REQUIRE_WINDOW_FOCUS","BROWSER_ATTACH_TIMEOUT","FORCE_CREATE_PROCESS","BROWSER_COMMAND_LINE_SWITCHES","USE_PER_PROCESS_PROXY","ENSURE_CLEAN_SESSION","LOG_FILE","LOG_LEVEL","HOST","EXTRACT_PATH","SILENT","Options","constructor","options_","proxy_","fromCapabilities","caps","options","map","Object","keys","forEach","key","has","get","Capability","PROXY","setProxy","introduceFlakinessByIgnoringProtectedModeSettings","ignoreSettings","ignoreZoomSetting","ignore","initialBrowserUrl","url","enablePersistentHover","enable","enableElementCacheCleanup","requireWindowFocus","browserAttachTimeout","timeout","Math","max","forceCreateProcessApi","force","addArguments","var_args","args","concat","apply","arguments","usePerProcessProxy","ensureCleanSession","cleanSession","setLogFile","file","setLogLevel","level","setHost","host","setExtractPath","path","silent","proxy","toCapabilities","opt_capabilities","Capabilities","ie","set","createServiceFromCapabilities","process","platform","Error","exe","findInPath","existsSync","push","port","findFreePort","DriverService","loopback","then","stdio","Driver","WebDriver","createSession","opt_config","opt_flow","service","client","start","HttpClient","executor","Executor","kill","setFileDetector","exports"],"sources":["/Users/hthere215/Desktop/Study/Classes/INF4MTX 133/Project/Project 4/a4-sleeptracker-hthere21/sleeptracker/node_modules/selenium-webdriver/ie.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](http://selenium-release.storage.googleapis.com/index.html)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n\n'use strict';\n\nconst fs = require('fs'),\n    util = require('util');\n\nconst http = require('./http'),\n    io = require('./io'),\n    capabilities = require('./lib/capabilities'),\n    promise = require('./lib/promise'),\n    webdriver = require('./lib/webdriver'),\n    portprober = require('./net/portprober'),\n    remote = require('./remote');\n\n\nconst IEDRIVER_EXE = 'IEDriverServer.exe';\n\n\n\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\nconst Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE'\n};\n\n\n\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\nconst Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent'\n};\n\n\n/**\n * Class for managing IEDriver specific options.\n */\nclass Options {\n  constructor() {\n    /** @private {!Object<(boolean|number|string|!Array<string>)>} */\n    this.options_ = {};\n\n    /** @private {(capabilities.ProxyConfig|null)} */\n    this.proxy_ = null;\n  }\n\n  /**\n   * Extracts the IEDriver specific options from the given capabilities\n   * object.\n   * @param {!capabilities.Capabilities} caps The capabilities object.\n   * @return {!Options} The IEDriver options.\n   */\n  static fromCapabilities(caps) {\n    var options = new Options();\n    var map = options.options_;\n\n    Object.keys(Key).forEach(function(key) {\n      key = Key[key];\n      if (caps.has(key)) {\n        map[key] = caps.get(key);\n      }\n    });\n\n    if (caps.has(capabilities.Capability.PROXY)) {\n      options.setProxy(caps.get(capabilities.Capability.PROXY));\n    }\n\n    return options;\n  }\n\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disbling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n  introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n    this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings;\n    return this;\n  }\n\n  /**\n   * Indicates whether to skip the check that the browser's zoom level is set to\n   * 100%.\n   *\n   * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n   * @return {!Options} A self reference.\n   */\n  ignoreZoomSetting(ignore) {\n    this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore;\n    return this;\n  }\n\n  /**\n   * Sets the initial URL loaded when IE starts. This is intended to be used with\n   * {@link #ignoreProtectedModeSettings} to allow the user to initialize IE in\n   * the proper Protected Mode zone. Setting this option may cause browser\n   * instability or flaky and unresponsive code. Only \"best effort\" support is\n   * provided when using this option.\n   *\n   * @param {string} url The initial browser URL.\n   * @return {!Options} A self reference.\n   */\n  initialBrowserUrl(url) {\n    this.options_[Key.INITIAL_BROWSER_URL] = url;\n    return this;\n  }\n\n  /**\n   * Configures whether to enable persistent mouse hovering (true by default).\n   * Persistent hovering is achieved by continuously firing mouse over events at\n   * the last location the mouse cursor has been moved to.\n   *\n   * @param {boolean} enable Whether to enable persistent hovering.\n   * @return {!Options} A self reference.\n   */\n  enablePersistentHover(enable) {\n    this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether the driver should attempt to remove obsolete\n   * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n   * page navigation (true by default). Disabling this option will cause the\n   * driver to run with a larger memory footprint.\n   *\n   * @param {boolean} enable Whether to enable element reference cleanup.\n   * @return {!Options} A self reference.\n   */\n  enableElementCacheCleanup(enable) {\n    this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to require the IE window to have input focus before\n   * performing any user interactions (i.e. mouse or keyboard events). This\n   * option is disabled by default, but delivers much more accurate interaction\n   * events when enabled.\n   *\n   * @param {boolean} require Whether to require window focus.\n   * @return {!Options} A self reference.\n   */\n  requireWindowFocus(require) {\n    this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require;\n    return this;\n  }\n\n  /**\n   * Configures the timeout, in milliseconds, that the driver will attempt to\n   * located and attach to a newly opened instance of Internet Explorer. The\n   * default is zero, which indicates waiting indefinitely.\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  browserAttachTimeout(timeout) {\n    this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0);\n    return this;\n  }\n\n  /**\n   * Configures whether to launch Internet Explorer using the CreateProcess API.\n   * If this option is not specified, IE is launched using IELaunchURL, if\n   * available. For IE 8 and above, this option requires the TabProcGrowth\n   * registry value to be set to 0.\n   *\n   * @param {boolean} force Whether to use the CreateProcess API.\n   * @return {!Options} A self reference.\n   */\n  forceCreateProcessApi(force) {\n    this.options_[Key.FORCE_CREATE_PROCESS] = !!force;\n    return this;\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} var_args The arguments to add.\n   * @return {!Options} A self reference.\n   */\n  addArguments(var_args) {\n    var args = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n    args = args.concat.apply(args, arguments);\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = args;\n    return this;\n  }\n\n  /**\n   * Configures whether proxies should be configured on a per-process basis. If\n   * not set, setting a {@linkplain #setProxy proxy} will configure the system\n   * proxy. The default behavior is to use the system proxy.\n   *\n   * @param {boolean} enable Whether to enable per-process proxy settings.\n   * @return {!Options} A self reference.\n   */\n  usePerProcessProxy(enable) {\n    this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to clear the cache, cookies, history, and saved form data\n   * before starting the browser. _Using this capability will clear session data\n   * for all running instances of Internet Explorer, including those started\n   * manually._\n   *\n   * @param {boolean} cleanSession Whether to clear all session data on startup.\n   * @return {!Options} A self reference.\n   */\n  ensureCleanSession(cleanSession) {\n    this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession;\n    return this;\n  }\n\n  /**\n   * Sets the path to the log file the driver should log to.\n   * @param {string} file The log file path.\n   * @return {!Options} A self reference.\n   */\n  setLogFile(file) {\n    this.options_[Key.LOG_FILE] = file;\n    return this;\n  }\n\n  /**\n   * Sets the IEDriverServer's logging {@linkplain Level level}.\n   * @param {Level} level The logging level.\n   * @return {!Options} A self reference.\n   */\n  setLogLevel(level) {\n    this.options_[Key.LOG_LEVEL] = level;\n    return this;\n  }\n\n  /**\n   * Sets the IP address of the driver's host adapter.\n   * @param {string} host The IP address to use.\n   * @return {!Options} A self reference.\n   */\n  setHost(host) {\n    this.options_[Key.HOST] = host;\n    return this;\n  }\n\n  /**\n   * Sets the path of the temporary data directory to use.\n   * @param {string} path The log file path.\n   * @return {!Options} A self reference.\n   */\n  setExtractPath(path) {\n    this.options_[Key.EXTRACT_PATH] = path;\n    return this;\n  }\n\n  /**\n   * Sets whether the driver should start in silent mode.\n   * @param {boolean} silent Whether to run in silent mode.\n   * @return {!Options} A self reference.\n   */\n  silent(silent) {\n    this.options_[Key.SILENT] = silent;\n    return this;\n  }\n\n  /**\n   * Sets the proxy settings for the new session.\n   * @param {capabilities.ProxyConfig} proxy The proxy configuration to use.\n   * @return {!Options} A self reference.\n   */\n  setProxy(proxy) {\n    this.proxy_ = proxy;\n    return this;\n  }\n\n  /**\n   * Converts this options instance to a {@link capabilities.Capabilities}\n   * object.\n   * @param {capabilities.Capabilities=} opt_capabilities The capabilities to\n   *     merge these options into, if any.\n   * @return {!capabilities.Capabilities} The capabilities.\n   */\n  toCapabilities(opt_capabilities) {\n    var caps = opt_capabilities || capabilities.Capabilities.ie();\n    if (this.proxy_) {\n      caps.set(capabilities.Capability.PROXY, this.proxy_);\n    }\n    Object.keys(this.options_).forEach(function(key) {\n      caps.set(key, this.options_[key]);\n    }, this);\n    return caps;\n  }\n}\n\n\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error(\n        'The IEDriver may only be used on Windows, but you appear to be on ' +\n        process.platform + '. Did you mean to run against a remote ' +\n        'WebDriver server?');\n  }\n\n  let exe = io.findInPath(IEDRIVER_EXE, true);\n  if (!exe || !fs.existsSync(exe)) {\n    throw Error(\n        `${IEDRIVER_EXE} could not be found on the current PATH. Please ` +\n        `download the latest version of ${IEDRIVER_EXE} from ` +\n        'http://selenium-release.storage.googleapis.com/index.html and ' +\n        'ensure it can be found on your system PATH.');\n  }\n\n  var args = [];\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST));\n  }\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE));\n  }\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL));\n  }\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH));\n  }\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent');\n  }\n\n  var port = portprober.findFreePort();\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function(port) {\n      return args.concat('--port=' + port);\n    }),\n    stdio: 'ignore'\n  });\n}\n\n\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\nclass Driver extends webdriver.WebDriver {\n  /**\n   * Creates a new session for Microsoft's Internet Explorer.\n   *\n   * @param {(capabilities.Capabilities|Options)=} opt_config The configuration\n   *     options.\n   * @param {promise.ControlFlow=} opt_flow The control flow to use,\n   *     or {@code null} to use the currently active flow.\n   * @return {!Driver} A new driver instance.\n   */\n  static createSession(opt_config, opt_flow) {\n    var caps = opt_config instanceof Options ?\n        opt_config.toCapabilities() :\n        (opt_config || capabilities.Capabilities.ie());\n\n    var service = createServiceFromCapabilities(caps);\n    var client = service.start().then(url => new http.HttpClient(url));\n    var executor = new http.Executor(client);\n\n    return /** @type {!Driver} */(super.createSession(\n        executor, caps, opt_flow, () => service.kill()));\n  }\n\n  /**\n   * This function is a no-op as file detectors are not supported by this\n   * implementation.\n   * @override\n   */\n  setFileDetector() {}\n}\n\n\n// PUBLIC API\n\n\nexports.Driver = Driver;\nexports.Options = Options;\nexports.Level = Level;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}